package ${packageName};

public abstract class AbstractRewriter extends ProcessorPrivate implements Rewriter {
#foreach($clazz in $classes)

  @Override
  public boolean shouldProcess${clazz.SimpleName}(${clazz.SimpleName} node) {
#if(${clazz.isTop()})
    return true;
#else
    return shouldProcess${clazz.SuperclassName}(node);
#end
  }
#end
#foreach($clazz in $classes)
  @Override
  final ${clazz.TopClassName} postProcess${clazz.SimpleName}(${clazz.SimpleName} node) {
    return rewrite${clazz.SimpleName}(node);
  }

#end
#foreach($clazz in $classes)

  @Override
  public ${clazz.TopClassName}  rewrite${clazz.SimpleName}(${clazz.SimpleName} node) {
#if(${clazz.isTop()})
    return node;
#else
    return rewrite${clazz.SuperclassName}(node);
#end
  }
#end
}