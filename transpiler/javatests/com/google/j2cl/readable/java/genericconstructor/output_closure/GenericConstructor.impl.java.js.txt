goog.module('genericconstructor.GenericConstructor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');
let Exception = goog.forwardDeclare('java.lang.Exception$impl');

/**
 * @template T
 */
class GenericConstructor extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  // Factory method corresponding to constructor 'GenericConstructor(Object,
  // Object)'.
  /** @template T, S @return {!GenericConstructor<T>} */
  static $create__java_lang_Object__java_lang_Object(/** S */ s, /** T */ t) {
    GenericConstructor.$clinit();
    let $instance = new GenericConstructor();
    $instance
        .$ctor__genericconstructor_GenericConstructor__java_lang_Object__java_lang_Object(
            s, t);
    return $instance;
  }
  // Initialization from constructor 'GenericConstructor(Object, Object)'.
  /** @template S */
  $ctor__genericconstructor_GenericConstructor__java_lang_Object__java_lang_Object(
      /** S */ s, /** T */ t) {
    this.$ctor__java_lang_Object__();
  }
  // Factory method corresponding to constructor 'GenericConstructor(Object)'.
  /** @template T, T_1 @return {!GenericConstructor<T>} */
  static $create__java_lang_Object(/** T_1 */ t) {
    GenericConstructor.$clinit();
    let $instance = new GenericConstructor();
    $instance.$ctor__genericconstructor_GenericConstructor__java_lang_Object(t);
    return $instance;
  }
  // Initialization from constructor 'GenericConstructor(Object)'.
  /** @template T_1 */
  $ctor__genericconstructor_GenericConstructor__java_lang_Object(/** T_1 */ t) {
    this.$ctor__java_lang_Object__();
  }

  m_test__() {
    GenericConstructor.$create__java_lang_Object__java_lang_Object(
        Exception.$create__(), Error.$create__());
    GenericConstructor.$create__java_lang_Object(Exception.$create__());
  }

  static $clinit() {
    GenericConstructor.$clinit = () => {};
    GenericConstructor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof GenericConstructor;
  }

  static $loadModules() {
    Error = goog.module.get('java.lang.Error$impl');
    Exception = goog.module.get('java.lang.Exception$impl');
  }
}
$Util.$setClassMetadata(
    GenericConstructor, 'genericconstructor.GenericConstructor');

exports = GenericConstructor;

//# sourceMappingURL=GenericConstructor.js.map
