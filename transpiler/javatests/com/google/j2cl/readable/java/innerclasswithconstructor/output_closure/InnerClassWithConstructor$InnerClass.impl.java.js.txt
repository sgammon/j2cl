goog.module('innerclasswithconstructor.InnerClassWithConstructor.InnerClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InnerClassWithConstructor = goog.forwardDeclare('innerclasswithconstructor.InnerClassWithConstructor$impl');

class InnerClass extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {InnerClassWithConstructor}*/
    this.$outer_this__innerclasswithconstructor_InnerClassWithConstructor_InnerClass;
    /**@type {number}*/
    this.f_b__innerclasswithconstructor_InnerClassWithConstructor_InnerClass =
        0;
  }
  // Factory method corresponding to constructor
  // 'InnerClass(InnerClassWithConstructor, int)'.
  /** @return {!InnerClass} */
  static $create__innerclasswithconstructor_InnerClassWithConstructor__int(
      /** InnerClassWithConstructor */ $outer_this, /** number */ b) {
    InnerClass.$clinit();
    let $instance = new InnerClass();
    $instance
        .$ctor__innerclasswithconstructor_InnerClassWithConstructor_InnerClass__innerclasswithconstructor_InnerClassWithConstructor__int(
            $outer_this, b);
    return $instance;
  }
  // Initialization from constructor 'InnerClass(InnerClassWithConstructor,
  // int)'.

  $ctor__innerclasswithconstructor_InnerClassWithConstructor_InnerClass__innerclasswithconstructor_InnerClassWithConstructor__int(
      /** InnerClassWithConstructor */ $outer_this, /** number */ b) {
    this.$outer_this__innerclasswithconstructor_InnerClassWithConstructor_InnerClass =
        $outer_this;
    this.$ctor__java_lang_Object__();
    this.f_b__innerclasswithconstructor_InnerClassWithConstructor_InnerClass =
        $outer_this.f_a__innerclasswithconstructor_InnerClassWithConstructor +
            b |
        0;
  }
  // Factory method corresponding to constructor
  // 'InnerClass(InnerClassWithConstructor)'.
  /** @return {!InnerClass} */
  static $create__innerclasswithconstructor_InnerClassWithConstructor(
      /** InnerClassWithConstructor */ $outer_this) {
    InnerClass.$clinit();
    let $instance = new InnerClass();
    $instance
        .$ctor__innerclasswithconstructor_InnerClassWithConstructor_InnerClass__innerclasswithconstructor_InnerClassWithConstructor(
            $outer_this);
    return $instance;
  }
  // Initialization from constructor 'InnerClass(InnerClassWithConstructor)'.

  $ctor__innerclasswithconstructor_InnerClassWithConstructor_InnerClass__innerclasswithconstructor_InnerClassWithConstructor(
      /** InnerClassWithConstructor */ $outer_this) {
    this.$ctor__innerclasswithconstructor_InnerClassWithConstructor_InnerClass__innerclasswithconstructor_InnerClassWithConstructor__int(
        $outer_this,
        $outer_this.f_a__innerclasswithconstructor_InnerClassWithConstructor);
  }

  static $clinit() {
    InnerClass.$clinit = () => {};
    InnerClass.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof InnerClass;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    InnerClass,
    'innerclasswithconstructor.InnerClassWithConstructor$InnerClass');

exports = InnerClass;

//# sourceMappingURL=InnerClassWithConstructor$InnerClass.js.map
