goog.module('multipleabstractparents.MultipleAbstractParents$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let ArrayList = goog.forwardDeclare('multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
let IStringList = goog.forwardDeclare('multipleabstractparents.MultipleAbstractParents.IStringList$impl');
let StringList = goog.forwardDeclare('multipleabstractparents.MultipleAbstractParents.StringList$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');

class MultipleAbstractParents extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!MultipleAbstractParents} */
  static $create__() {
    MultipleAbstractParents.$clinit();
    let $instance = new MultipleAbstractParents();
    $instance.$ctor__multipleabstractparents_MultipleAbstractParents__();
    return $instance;
  }

  $ctor__multipleabstractparents_MultipleAbstractParents__() {
    this.$ctor__java_lang_Object__();
  }

  static m_main__arrayOf_java_lang_String(/** Array<?string> */ args) {
    MultipleAbstractParents.$clinit();
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        /**@type {!ArrayList<?string>}*/ (ArrayList.$create__())
            .m_getFoo__java_lang_Object(null),
        'AbstractCollection'));
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        StringList.$create__().m_getFoo__java_lang_Object(null),
        'AbstractCollection'));
    $Asserts.$assert(j_l_String.m_equals__java_lang_String__java_lang_Object(
        /**@type {IStringList}*/ (StringList.$create__())
            .m_getFoo__java_lang_String(null),
        'AbstractCollection'));
  }

  static $clinit() {
    MultipleAbstractParents.$clinit = () => {};
    MultipleAbstractParents.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof MultipleAbstractParents;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    ArrayList = goog.module.get(
        'multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
    StringList = goog.module.get(
        'multipleabstractparents.MultipleAbstractParents.StringList$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
  }
}
$Util.$setClassMetadata(
    MultipleAbstractParents, 'multipleabstractparents.MultipleAbstractParents');

exports = MultipleAbstractParents;

//# sourceMappingURL=MultipleAbstractParents.js.map
