goog.module('multipleabstractparents.MultipleAbstractParents.ArrayList$impl');

const AbstractList = goog.require('multipleabstractparents.MultipleAbstractParents.AbstractList$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @extends {AbstractList<T>}
 */
class ArrayList extends AbstractList {
  /** @protected */
  constructor() {
    super();
  }
  /** @template T @return {!ArrayList<T>} */
  static $create__() {
    ArrayList.$clinit();
    let $instance = new ArrayList();
    $instance
        .$ctor__multipleabstractparents_MultipleAbstractParents_ArrayList__();
    return $instance;
  }

  $ctor__multipleabstractparents_MultipleAbstractParents_ArrayList__() {
    this.$ctor__multipleabstractparents_MultipleAbstractParents_AbstractList__();
  }

  static $clinit() {
    ArrayList.$clinit = () => {};
    ArrayList.$loadModules();
    AbstractList.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof ArrayList;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    ArrayList, 'multipleabstractparents.MultipleAbstractParents$ArrayList');

exports = ArrayList;

//# sourceMappingURL=MultipleAbstractParents$ArrayList.js.map
