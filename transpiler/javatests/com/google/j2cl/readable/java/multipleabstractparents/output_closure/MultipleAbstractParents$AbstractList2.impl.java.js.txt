goog.module('multipleabstractparents.MultipleAbstractParents.AbstractList2$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const List = goog.require('multipleabstractparents.MultipleAbstractParents.List$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @abstract
 * @template T
 * @implements {List<T>}
 */
class AbstractList2 extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }

  $ctor__multipleabstractparents_MultipleAbstractParents_AbstractList2__() {
    this.$ctor__java_lang_Object__();
  }

  static $clinit() {
    AbstractList2.$clinit = () => {};
    AbstractList2.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof AbstractList2;
  }

  static $loadModules() {}
}
List.$markImplementor(AbstractList2);
$Util.$setClassMetadata(
    AbstractList2,
    'multipleabstractparents.MultipleAbstractParents$AbstractList2');

exports = AbstractList2;

//# sourceMappingURL=MultipleAbstractParents$AbstractList2.js.map
