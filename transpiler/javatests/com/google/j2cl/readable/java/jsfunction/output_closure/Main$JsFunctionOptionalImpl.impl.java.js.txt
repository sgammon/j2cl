goog.module('jsfunction.Main.JsFunctionOptionalImpl$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let $Primitives = goog.forwardDeclare('vmbootstrap.Primitives$impl');

class JsFunctionOptionalImpl extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {function(number, ?number=):number} */
  static $create__() {
    JsFunctionOptionalImpl.$clinit();
    let $instance = new JsFunctionOptionalImpl();
    $instance.$ctor__jsfunction_Main_JsFunctionOptionalImpl__();
    return $Util.$makeLambdaFunction(
        JsFunctionOptionalImpl.prototype.m_m__int__java_lang_Double, $instance,
        JsFunctionOptionalImpl.$copy);
  }
  /** @suppress {invalidCasts} */
  $ctor__jsfunction_Main_JsFunctionOptionalImpl__() {
    this.$ctor__java_lang_Object__();
  }
  /** @this {?function(number, ?number=):number} @return {number} */
  m_m__int__java_lang_Double(/** number */ i, /** ?number= */ number_1) {
    return $Primitives.$narrowDoubleToInt(
        i + Double.m_doubleValue__java_lang_Double(number_1));
  }

  static $clinit() {
    JsFunctionOptionalImpl.$clinit = () => {};
    JsFunctionOptionalImpl.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance.$is__jsfunction_Main_JsFunctionOptionalImpl;
  }

  static $copy(/** ? */ from, /** ? */ to) {
    to.$is__jsfunction_Main_JsFunctionOptionalImpl = true;
  }

  static $loadModules() {
    Double = goog.module.get('java.lang.Double$impl');
    $Primitives = goog.module.get('vmbootstrap.Primitives$impl');
  }
}
$JavaScriptFunction.$markImplementor(JsFunctionOptionalImpl);
$Util.$setClassMetadata(
    JsFunctionOptionalImpl, 'jsfunction.Main$JsFunctionOptionalImpl');

exports = JsFunctionOptionalImpl;

//# sourceMappingURL=Main$JsFunctionOptionalImpl.js.map
