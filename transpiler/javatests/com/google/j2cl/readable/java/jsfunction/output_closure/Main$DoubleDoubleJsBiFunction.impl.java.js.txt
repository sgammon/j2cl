goog.module('jsfunction.Main.DoubleDoubleJsBiFunction$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

class DoubleDoubleJsBiFunction extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {function(?number, ?number):?number} */
  static $create__() {
    DoubleDoubleJsBiFunction.$clinit();
    let $instance = new DoubleDoubleJsBiFunction();
    $instance.$ctor__jsfunction_Main_DoubleDoubleJsBiFunction__();
    return $Util.$makeLambdaFunction(
        DoubleDoubleJsBiFunction.prototype
            .m_apply__java_lang_Object__java_lang_Number,
        $instance, DoubleDoubleJsBiFunction.$copy);
  }
  /** @suppress {invalidCasts} */
  $ctor__jsfunction_Main_DoubleDoubleJsBiFunction__() {
    this.$ctor__java_lang_Object__();
  }
  /** @return {?number} */
  static m_apply__jsfunction_Main_DoubleDoubleJsBiFunction__java_lang_Double__java_lang_Double(
      /** function(?number, ?number):?number */ $thisArg, /** ?number */ d,
      /** ?number */ i) {
    DoubleDoubleJsBiFunction.$clinit();
    return d;
  }
  // Bridge method.
  /** @this {?function(?number, ?number):?number} @return {?number} */
  m_apply__java_lang_Object__java_lang_Number(
      /** ?number */ arg0, /** ?number */ arg1) {
    return DoubleDoubleJsBiFunction
        .m_apply__jsfunction_Main_DoubleDoubleJsBiFunction__java_lang_Double__java_lang_Double(
            this, /**@type {?number}*/ ($Casts.$to(arg0, Double)),
            /**@type {?number}*/ ($Casts.$to(arg1, Double)));
  }

  static $clinit() {
    DoubleDoubleJsBiFunction.$clinit = () => {};
    DoubleDoubleJsBiFunction.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance.$is__jsfunction_Main_DoubleDoubleJsBiFunction;
  }

  static $copy(/** ? */ from, /** ? */ to) {
    to.$is__jsfunction_Main_DoubleDoubleJsBiFunction = true;
  }

  static $loadModules() {
    Double = goog.module.get('java.lang.Double$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$JavaScriptFunction.$markImplementor(DoubleDoubleJsBiFunction);
$Util.$setClassMetadata(
    DoubleDoubleJsBiFunction, 'jsfunction.Main$DoubleDoubleJsBiFunction');

exports = DoubleDoubleJsBiFunction;

//# sourceMappingURL=Main$DoubleDoubleJsBiFunction.js.map
