goog.module('mixednestings.MixedNestings.A.$1B$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let A = goog.forwardDeclare('mixednestings.MixedNestings.A$impl');
let $1 = goog.forwardDeclare('mixednestings.MixedNestings.A.$1B.$1$impl');

class $1B extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {A}*/
    this.$outer_this__mixednestings_MixedNestings_A_1B;
  }
  /** @return {!$1B} */
  static $create__mixednestings_MixedNestings_A(/** A */ $outer_this) {
    $1B.$clinit();
    let $instance = new $1B();
    $instance
        .$ctor__mixednestings_MixedNestings_A_1B__mixednestings_MixedNestings_A(
            $outer_this);
    return $instance;
  }

  $ctor__mixednestings_MixedNestings_A_1B__mixednestings_MixedNestings_A(
      /** A */ $outer_this) {
    this.$outer_this__mixednestings_MixedNestings_A_1B = $outer_this;
    this.$ctor__java_lang_Object__();
  }

  m_bb__() {}
  /** @return {number} */
  m_b__() {
    let i = $1.$create__mixednestings_MixedNestings_A_1B(this);
    return i.m_fun__int(400);
  }

  static $clinit() {
    $1B.$clinit = () => {};
    $1B.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1B;
  }

  static $loadModules() {
    $1 = goog.module.get('mixednestings.MixedNestings.A.$1B.$1$impl');
  }
}
$Util.$setClassMetadata($1B, 'mixednestings.MixedNestings$A$1B');

exports = $1B;

//# sourceMappingURL=MixedNestings$A$1B.js.map
