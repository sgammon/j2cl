goog.module('mixednestings.MixedNestings.A.$1B.$1$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const MyInterface = goog.require('mixednestings.MyInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1B = goog.forwardDeclare('mixednestings.MixedNestings.A.$1B$impl');
let $1_$1 = goog.forwardDeclare('mixednestings.MixedNestings.A.$1B.$1.$1$impl');

/**
 * @implements {MyInterface}
 */
class $1 extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {$1B}*/
    this.$outer_this__mixednestings_MixedNestings_A_1B_1;
  }
  /** @return {!$1} */
  static $create__mixednestings_MixedNestings_A_1B(/** $1B */ $outer_this) {
    $1.$clinit();
    let $instance = new $1();
    $instance
        .$ctor__mixednestings_MixedNestings_A_1B_1__mixednestings_MixedNestings_A_1B(
            $outer_this);
    return $instance;
  }

  $ctor__mixednestings_MixedNestings_A_1B_1__mixednestings_MixedNestings_A_1B(
      /** $1B */ $outer_this) {
    this.$outer_this__mixednestings_MixedNestings_A_1B_1 = $outer_this;
    this.$ctor__java_lang_Object__();
  }
  /** @override @return {number} */
  m_fun__int(/** number */ a) {
    let ii = MyInterface.$adapt((/** number */ n) => {
      this.$outer_this__mixednestings_MixedNestings_A_1B_1
          .$outer_this__mixednestings_MixedNestings_A_1B
          .$outer_this__mixednestings_MixedNestings_A.m_mm__();
      this.$outer_this__mixednestings_MixedNestings_A_1B_1
          .$outer_this__mixednestings_MixedNestings_A_1B.m_aa__();
      this.$outer_this__mixednestings_MixedNestings_A_1B_1.m_bb__();
      let iii = MyInterface.$adapt((/** number */ m) => {
        this.$outer_this__mixednestings_MixedNestings_A_1B_1
            .$outer_this__mixednestings_MixedNestings_A_1B
            .$outer_this__mixednestings_MixedNestings_A.m_mm__();
        this.$outer_this__mixednestings_MixedNestings_A_1B_1
            .$outer_this__mixednestings_MixedNestings_A_1B.m_aa__();
        this.$outer_this__mixednestings_MixedNestings_A_1B_1.m_bb__();
        return $1_$1.$create__mixednestings_MixedNestings_A_1B_1(this)
            .m_fun__int(100);
      });
      return iii.m_fun__int(200);
    });
    return ii.m_fun__int(300);
  }

  static $clinit() {
    $1.$clinit = () => {};
    $1.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1;
  }

  static $loadModules() {
    $1_$1 = goog.module.get('mixednestings.MixedNestings.A.$1B.$1.$1$impl');
  }
}
MyInterface.$markImplementor($1);
$Util.$setClassMetadata($1, 'mixednestings.MixedNestings$A$1B$1');

exports = $1;

//# sourceMappingURL=MixedNestings$A$1B$1.js.map
