goog.module('strings.Strings$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');
let StringHolder = goog.forwardDeclare('strings.Strings.StringHolder$impl');

class Strings extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {?string}*/
    this.f_someString__strings_Strings_;
    /**@type {?string}*/
    this.f_nonBmpChar__strings_Strings_;
    /**@type {?string}*/
    this.f_wideColon__strings_Strings_;
  }
  /** @return {!Strings} */
  static $create__() {
    Strings.$clinit();
    let $instance = new Strings();
    $instance.$ctor__strings_Strings__();
    return $instance;
  }

  $ctor__strings_Strings__() {
    this.$ctor__java_lang_Object__();
    this.$init___$p_strings_Strings();
  }

  m_test__() {
    let s1 = null;
    let s2 = null;
    let s3 = j_l_String.m_valueOf__java_lang_Object(s1) +
        j_l_String.m_valueOf__java_lang_Object(s2);
    s2 = j_l_String.m_valueOf__java_lang_Object(s2) +
        j_l_String.m_valueOf__java_lang_Object(s2);
    s1 = j_l_String.m_valueOf__java_lang_Object(s1) + 'a';
    s3 = j_l_String.m_valueOf__java_lang_Object(s1) +
        j_l_String.m_valueOf__java_lang_Object(s1) +
        j_l_String.m_valueOf__java_lang_Object(s2) +
        j_l_String.m_valueOf__java_lang_Object(null) + 'a';
    s3 = 'a' + j_l_String.m_valueOf__java_lang_Object(s1) +
        j_l_String.m_valueOf__java_lang_Object(s1) +
        j_l_String.m_valueOf__java_lang_Object(s2) +
        j_l_String.m_valueOf__java_lang_Object(null);
    let /** ?string */ s4;
    let c1 = 70 /* "F" */;
    let c2 = 111 /* "o" */;
    s4 = (c1 + c2 | 0) + 'o';
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + ($Long.fromInt(1) + '');
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + $Long.fromInt(1);
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) +
        j_l_String.m_valueOf__char(67 /* "C" */);
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + 1;
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + 1;
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + 1;
    s4 = j_l_String.m_valueOf__java_lang_Object(s4) + 1;
    {
      let $qualifier = StringHolder.$create__();
      $qualifier.f_s__strings_Strings_StringHolder =
          j_l_String.m_valueOf__java_lang_Object(
              $qualifier.f_s__strings_Strings_StringHolder) +
          j_l_String.m_valueOf__java_lang_Object(s4);
    }
    {
      let $qualifier_1 = StringHolder.$create__();
      $qualifier_1.f_s__strings_Strings_StringHolder =
          j_l_String.m_valueOf__java_lang_Object(
              $qualifier_1.f_s__strings_Strings_StringHolder) +
          j_l_String.m_valueOf__char(c1);
    }
    {
      let $qualifier_2 = StringHolder.$create__();
      $qualifier_2.f_s__strings_Strings_StringHolder =
          j_l_String.m_valueOf__java_lang_Object(
              $qualifier_2.f_s__strings_Strings_StringHolder) +
          'o';
    }
  }
  /** @private */
  $init___$p_strings_Strings() {
    this.f_someString__strings_Strings_ = 'This is a string literal';
    this.f_nonBmpChar__strings_Strings_ = '\uD800\uDF46';
    this.f_wideColon__strings_Strings_ = '\uFF1A';
  }

  static $clinit() {
    Strings.$clinit = () => {};
    Strings.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Strings;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    $Long = goog.module.get('nativebootstrap.Long$impl');
    StringHolder = goog.module.get('strings.Strings.StringHolder$impl');
  }
}
/**@const {?string}*/
Strings.f_ESCAPE_CODES__strings_Strings_ =
    '\b\f\n\r\t"\'\\\u0000\u007F\uD800\uDF46\uFF1A';
/**@const {?string}*/
Strings.f_ESCAPE_CODES_COPY__strings_Strings_ =
    '\b\f\n\r\t"\'\\\u0000\u007F\uD800\uDF46\uFF1A';
$Util.$setClassMetadata(Strings, 'strings.Strings');

exports = Strings;

//# sourceMappingURL=Strings.js.map
