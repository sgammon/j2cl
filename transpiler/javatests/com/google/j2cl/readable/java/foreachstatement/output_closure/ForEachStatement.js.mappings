[ForEachStatement] => [ForEachStatement]
[ForEachStatement] => [constructor]
[ForEachStatement] => [super();] "foreachstatement.ForEachStatement.<synthetic: ctor_js>"
[ForEachStatement] => [$create__]
[ForEachStatement] => [ForEachStatement.$clinit();] "foreachstatement.ForEachStatement.<synthetic: ctor_create>"
[ForEachStatement] => [let $instance = new ForEachStatement();] "foreachstatement.ForEachStatement.<synthetic: ctor_create>"
[ForEachStatement] => [$instance.$ctor__foreachstatement_ForEachStatement__();] "foreachstatement.ForEachStatement.<synthetic: ctor_create>"
[ForEachStatement] => [return $instance;] "foreachstatement.ForEachStatement.<synthetic: ctor_create>"
[ForEachStatement] => [$ctor__foreachstatement_ForEachStatement__]
[ForEachStatement] => [this.$ctor__java_lang_Object__();] "foreachstatement.ForEachStatement.<init>"
[test] => [m_test__java_lang_Iterable]
[iterable] => [iterable] "iterable"
[for (Throwable t : iterable) {
      t.toString();
    }] => [for (let $iterator = iterable.m_iterator__(); $iterator.m_hasNext__(); ) {
   let t = /**@type {Throwable}*/ ($Casts.$to($iterator.m_next__(), Throwable));
   t.toString();
  }] "foreachstatement.ForEachStatement.test"
[for (Throwable t : iterable) {
      t.toString();
    }] => [let t = /**@type {Throwable}*/ ($Casts.$to($iterator.m_next__(), Throwable));] "foreachstatement.ForEachStatement.test"
[t] => [t] "t"
[t.toString();] => [t.toString();] "foreachstatement.ForEachStatement.test"
[for (Throwable t : new Throwable[10]) {
      t.toString();
    }] => [for (let $array = /**@type {!Array<Throwable>}*/ ($Arrays.$create([10], Throwable)), $index = 0; $index < $array.length; $index++) {
   let t_1 = $array[$index];
   t_1.toString();
  }] "foreachstatement.ForEachStatement.test"
[for (Throwable t : new Throwable[10]) {
      t.toString();
    }] => [let t_1 = $array[$index];] "foreachstatement.ForEachStatement.test"
[t] => [t_1] "t"
[t.toString();] => [t_1.toString();] "foreachstatement.ForEachStatement.test"
[ForEachStatement] => [$clinit]
[ForEachStatement] => [ForEachStatement.$clinit = () =>{};] "foreachstatement.ForEachStatement.<clinit>"
[ForEachStatement] => [ForEachStatement.$loadModules();] "foreachstatement.ForEachStatement.<clinit>"
[ForEachStatement] => [j_l_Object.$clinit();] "foreachstatement.ForEachStatement.<clinit>"

