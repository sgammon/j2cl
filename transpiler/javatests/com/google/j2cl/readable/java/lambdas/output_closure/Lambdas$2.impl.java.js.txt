goog.module('lambdas.Lambdas.$2$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const Functional = goog.require('lambdas.Lambdas.Functional$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {Functional<T>}
 */
class $2 extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @template T @return {!$2<T>} */
  static $create__() {
    $2.$clinit();
    let $instance = new $2();
    $instance.$ctor__lambdas_Lambdas_2__();
    return $instance;
  }

  $ctor__lambdas_Lambdas_2__() {
    this.$ctor__java_lang_Object__();
  }
  /** @override @return {Functional<T>} */
  m_wrap__lambdas_Lambdas_Functional(/** Functional<T> */ f) {
    return null;
  }

  static $clinit() {
    $2.$clinit = () => {};
    $2.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $2;
  }

  static $loadModules() {}
}
Functional.$markImplementor($2);
$Util.$setClassMetadata($2, 'lambdas.Lambdas$2');

exports = $2;

//# sourceMappingURL=Lambdas$2.js.map
