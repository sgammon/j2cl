goog.module('lambdas.Lambdas.Functional.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const Functional = goog.require('lambdas.Lambdas.Functional$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {Functional<T>}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function(Functional<T>):Functional<T> */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function(Functional<T>):Functional<T>}*/
    this.f_fn__lambdas_Lambdas_Functional_$LambdaAdaptor;
    this.$ctor__lambdas_Lambdas_Functional_$LambdaAdaptor__lambdas_Lambdas_Functional_$JsFunction(
        fn);
  }

  $ctor__lambdas_Lambdas_Functional_$LambdaAdaptor__lambdas_Lambdas_Functional_$JsFunction(
      /** ?function(Functional<T>):Functional<T> */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__lambdas_Lambdas_Functional_$LambdaAdaptor = fn;
  }
  /** @override @return {Functional<T>} */
  m_wrap__lambdas_Lambdas_Functional(/** Functional<T> */ arg0) {
    let /** ?function(Functional<T>):Functional<T> */ $function;
    return (
        $function = this.f_fn__lambdas_Lambdas_Functional_$LambdaAdaptor,
        $function(arg0));
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
Functional.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata(
    $LambdaAdaptor, 'lambdas.Lambdas$Functional$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=Lambdas$Functional$$LambdaAdaptor.js.map
