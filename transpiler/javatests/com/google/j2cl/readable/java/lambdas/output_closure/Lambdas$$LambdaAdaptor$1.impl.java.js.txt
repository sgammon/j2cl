goog.module('lambdas.Lambdas.$LambdaAdaptor$1$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');

/**
 * @template T
 */
class $LambdaAdaptor$1 extends j_l_Object {
  constructor(
      /** ?function(?function(T):?void, ?function(Throwable):?void):void */
      fn) {
    $LambdaAdaptor$1.$clinit();
    super();
    /**@type {?function(?function(T):?void, ?function(Throwable):?void):void}*/
    this.f_fn__lambdas_Lambdas_$LambdaAdaptor$1;
    this.$ctor__lambdas_Lambdas_$LambdaAdaptor$1__lambdas_Lambdas_Thenable_$JsFunction(
        fn);
  }

  $ctor__lambdas_Lambdas_$LambdaAdaptor$1__lambdas_Lambdas_Thenable_$JsFunction(
      /** ?function(?function(T):?void, ?function(Throwable):?void):void */
      fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__lambdas_Lambdas_$LambdaAdaptor$1 = fn;
  }

  then(/** ?function(T):?void */ arg0, /** ?function(Throwable):?void */ arg1) {
    {
      let $function = this.f_fn__lambdas_Lambdas_$LambdaAdaptor$1;
      $function(arg0, arg1);
    }
  }

  static $clinit() {
    $LambdaAdaptor$1.$clinit = () => {};
    $LambdaAdaptor$1.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor$1;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata($LambdaAdaptor$1, 'lambdas.Lambdas$$LambdaAdaptor$1');

exports = $LambdaAdaptor$1;

//# sourceMappingURL=Lambdas$$LambdaAdaptor$1.js.map
