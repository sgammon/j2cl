[Equality] => [Equality]
[Equality] => [constructor]
[Equality] => [super();] "equality.Equality.<synthetic: ctor_js>"
[Equality] => [$create__]
[Equality] => [Equality.$clinit();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [let $instance = new Equality();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [$instance.$ctor__equality_Equality__();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [return $instance;] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [$ctor__equality_Equality__]
[Equality] => [this.$ctor__java_lang_Object__();] "equality.Equality.<init>"
[test] => [m_test__]
[assert false == false;] => [$Asserts.$assert(false == false);] "equality.Equality.test"
[assert 0 != 1;] => [$Asserts.$assert(0 != 1);] "equality.Equality.test"
[assert new Object() != new Object();] => [$Asserts.$assert(!$Equality.$same(j_l_Object.$create__(), j_l_Object.$create__()));] "equality.Equality.test"
[assert (Double) 0.0 == (Double) 0.0;] => [$Asserts.$assert($Equality.$same(/**@type {?number}*/ ($Casts.$to(0, Double)), /**@type {?number}*/ ($Casts.$to(0, Double))));] "equality.Equality.test"
[assert (Float) 0.0f == (Float) 0.0f;] => [$Asserts.$assert($Equality.$same(Float.m_valueOf__float(0), Float.m_valueOf__float(0)));] "equality.Equality.test"
[assert null != new Object();] => [$Asserts.$assert(!$Equality.$same(null, j_l_Object.$create__()));] "equality.Equality.test"
[assert new Object() != null;] => [$Asserts.$assert(!$Equality.$same(j_l_Object.$create__(), null));] "equality.Equality.test"
[Equality] => [$clinit]
[Equality] => [Equality.$clinit = () =>{};] "equality.Equality.<clinit>"
[Equality] => [Equality.$loadModules();] "equality.Equality.<clinit>"
[Equality] => [j_l_Object.$clinit();] "equality.Equality.<clinit>"

