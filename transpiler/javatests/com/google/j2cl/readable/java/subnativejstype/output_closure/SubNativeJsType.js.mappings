[SubNativeJsType] => [SubNativeJsType]
[SubNativeJsType] => [constructor]
[x] => [x] "x"
[SubNativeJsType] => [SubNativeJsType.$clinit();] "subnativejstype.SubNativeJsType.<init>"
[SubNativeJsType] => [super(x + 1 | 0);] "subnativejstype.SubNativeJsType.<init>"
[SubNativeJsType] => [this.$ctor__subnativejstype_SubNativeJsType__int(x);] "subnativejstype.SubNativeJsType.<init>"
[SubNativeJsType] => [$ctor__subnativejstype_SubNativeJsType__int]
[x] => [x] "x"
[SubNativeJsType] => [$create__]
[SubNativeJsType] => [SubNativeJsType.$clinit();] "subnativejstype.SubNativeJsType.<synthetic: ctor_create>"
[SubNativeJsType] => [let $instance = new SubNativeJsType(10);] "subnativejstype.SubNativeJsType.<synthetic: ctor_create>"
[SubNativeJsType] => [$instance.$ctor__subnativejstype_SubNativeJsType__();] "subnativejstype.SubNativeJsType.<synthetic: ctor_create>"
[SubNativeJsType] => [return $instance;] "subnativejstype.SubNativeJsType.<synthetic: ctor_create>"
[SubNativeJsType] => [$ctor__subnativejstype_SubNativeJsType__]
[SubNativeJsType] => [$clinit]
[SubNativeJsType] => [SubNativeJsType.$clinit = () =>{};] "subnativejstype.SubNativeJsType.<clinit>"
[SubNativeJsType] => [SubNativeJsType.$loadModules();] "subnativejstype.SubNativeJsType.<clinit>"

