;;; Code for arithmeticexpressions.ArithmeticExpressions

;;; CLASS  ArithmeticExpressions

(global $FLOAT_CONSTANT@arithmeticexpressions.ArithmeticExpressions f32 (f32.const 0.0))
(global $DOUBLE_CONSTANT@arithmeticexpressions.ArithmeticExpressions f64 (f64.const 0.0))
(global $DOUBLE_CONSTANT_WITH_ARITHMETIC@arithmeticexpressions.ArithmeticExpressions f64 (f64.const 0.0))
(global $one@arithmeticexpressions.ArithmeticExpressions i64 (i64.const 0))
(global $foo@arithmeticexpressions.ArithmeticExpressions i64 (i64.const 0))
(type $arithmeticexpressions.ArithmeticExpressions (struct
 (field $bar@arithmeticexpressions.ArithmeticExpressions i64)
 (field $intField@arithmeticexpressions.ArithmeticExpressions i64)
))

;;; void ArithmeticExpressions.testCoercions()
(func $testCoercions<>:void@arithmeticexpressions.ArithmeticExpressions
 (local $b.6751 i32)
 (local $c.6752 i32)
 (local $s.6753 i32)
 (local $i.6754 i32)
 (local $f.6755 f32)
 (local $d.6756 f64)
 (block
  ;; byte b = ((byte) 1);
  (local.tee $b.6751 (i32.const 0))
  drop
  
  ;; char c = ((char) 1);
  (local.tee $c.6752 (i32.const 0))
  drop
  
  ;; short s = ((short) 1);
  (local.tee $s.6753 (i32.const 0))
  drop
  
  ;; int i = ((int) 1);
  (local.tee $i.6754 (i32.const 0))
  drop
  
  ;; float f = ((float) 1);
  (local.tee $f.6755 (f32.const 0.0))
  drop
  
  ;; double d = ((double) 1);
  (local.tee $d.6756 (f64.const 0.0))
  drop
  
  ;; (b = ((byte) 9223372036854775807));
  (local.tee $b.6751 (i32.const 0))
  drop
  ;; (c = ((char) 9223372036854775807));
  (local.tee $c.6752 (i32.const 0))
  drop
  ;; (s = ((short) 9223372036854775807));
  (local.tee $s.6753 (i32.const 0))
  drop
  ;; (i = ((int) 9223372036854775807));
  (local.tee $i.6754 (i32.const 0))
  drop
  ;; (f = ((float) 9223372036854775807));
  (local.tee $f.6755 (f32.const 0.0))
  drop
  ;; (d = ((double) 9223372036854775807));
  (local.tee $d.6756 (f64.const 0.0))
  drop
 )
)

;;; void ArithmeticExpressions.testPrimitives()
(func $testPrimitives<>:void@arithmeticexpressions.ArithmeticExpressions
 (local $a.6757 i32)
 (local $b.6758 i32)
 (local $c.6759 i32)
 (local $d.6760 i32)
 (local $e.6761 i32)
 (local $f.6762 i32)
 (local $g.6763 i32)
 (local $h.6764 i32)
 (local $i.6765 i32)
 (local $j.6766 i32)
 (local $k.6767 i32)
 (local $l.6768 i32)
 (local $m.6769 i32)
 (local $o.6770 f64)
 (local $s.6771 i32)
 (block
  ;; int a = 10,int b = a++,int c = a--,int d = ++a,int e = --a,int f = -a,int g = +a,int h = ~a,int i = (((1 + 1) + 2) - 5),int j = ((1 + 2) * (3 + 4));
  (local.tee $a.6757 (i32.const 10))
  drop
  (local.tee $b.6758 (i32.const 0))
  drop
  (local.tee $c.6759 (i32.const 0))
  drop
  (local.tee $d.6760 (i32.const 0))
  drop
  (local.tee $e.6761 (i32.const 0))
  drop
  (local.tee $f.6762 (i32.const 0))
  drop
  (local.tee $g.6763 (i32.const 0))
  drop
  (local.tee $h.6764 (i32.const 0))
  drop
  (local.tee $i.6765 (i32.const 0))
  drop
  (local.tee $j.6766 (i32.const 0))
  drop
  
  ;; boolean k = !(((1 + 2) + 3) == 4),boolean l = ((1 + 2) != 4),boolean m = (java.lang.Long.MAX_VALUE != 9.223372036854778E18);
  (local.tee $k.6767 (i32.const 0))
  drop
  (local.tee $l.6768 (i32.const 0))
  drop
  (local.tee $m.6769 (i32.const 0))
  drop
  
  ;; double o = (((5 + 1) / 2) - 0.0);
  (local.tee $o.6770 (f64.const 0.0))
  drop
  
  ;; (a = (a << 31));
  (local.tee $a.6757 (i32.const 0))
  drop
  ;; (a <<= 1);
  (i32.const 0)
  drop
  ;; (a += 1);
  (i32.const 0)
  drop
  ;; (a /= 1);
  (i32.const 0)
  drop
  ;; (a += java.lang.Double.MAX_VALUE);
  (i32.const 0)
  drop
  ;; (k |= true);
  (i32.const 0)
  drop
  ;; short s = 10;
  (local.tee $s.6771 (i32.const 0))
  drop
  
  ;; (k = (++s == 10));
  (local.tee $k.6767 (i32.const 0))
  drop
 )
)

;;; void ArithmeticExpressions.testCompoundArray()
(func $testCompoundArray<>:void@arithmeticexpressions.ArithmeticExpressions
 (local $ints.6772 (ref null $java.lang.Object))
 (local $i.6773 i32)
 (local $longs.6774 (ref null $java.lang.Object))
 (local $booleans.6775 (ref null $java.lang.Object))
 (local $strings.6776 (ref null $java.lang.Object))
 (local $shorts.6777 (ref null $java.lang.Object))
 (local $b.6778 i32)
 (block
  ;; int[] ints = null;
  (local.tee $ints.6772 (ref.null $java.lang.Object))
  drop
  
  ;; (ints[0] += 1);
  (i32.const 0)
  drop
  ;; (ints[0] -= 1);
  (i32.const 0)
  drop
  ;; (ints[0] *= 1);
  (i32.const 0)
  drop
  ;; (ints[0] /= 1);
  (i32.const 0)
  drop
  ;; (ints[0] &= 1);
  (i32.const 0)
  drop
  ;; (ints[0] ^= 1);
  (i32.const 0)
  drop
  ;; (ints[0] |= 1);
  (i32.const 0)
  drop
  ;; (ints[0] %= 1);
  (i32.const 0)
  drop
  ;; (ints[0] <<= 1);
  (i32.const 0)
  drop
  ;; (ints[0] >>= 1);
  (i32.const 0)
  drop
  ;; (ints[0] >>>= 1);
  (i32.const 0)
  drop
  ;; ints[0]++;
  (i32.const 0)
  drop
  ;; ++ints[0];
  (i32.const 0)
  drop
  ;; int i = 0;
  (local.tee $i.6773 (i32.const 0))
  drop
  
  ;; ints[i++]++;
  (i32.const 0)
  drop
  ;; ++ints[++i];
  (i32.const 0)
  drop
  ;; (ints[i++] /= 1);
  (i32.const 0)
  drop
  ;; long[] longs = null;
  (local.tee $longs.6774 (ref.null $java.lang.Object))
  drop
  
  ;; (longs[0] += 1);
  (i64.const 0)
  drop
  ;; longs[0]--;
  (i64.const 0)
  drop
  ;; --longs[0];
  (i64.const 0)
  drop
  ;; arithmeticexpressions.ArithmeticExpressions.getLongArray()[0]++;
  (i64.const 0)
  drop
  ;; boolean[] booleans = null;
  (local.tee $booleans.6775 (ref.null $java.lang.Object))
  drop
  
  ;; (booleans[0] |= true);
  (i32.const 0)
  drop
  ;; String[] strings = null;
  (local.tee $strings.6776 (ref.null $java.lang.Object))
  drop
  
  ;; (strings[0] += null);
  (ref.null $java.lang.String)
  drop
  ;; short[] shorts = null;
  (local.tee $shorts.6777 (ref.null $java.lang.Object))
  drop
  
  ;; boolean b = (++shorts[0] == 10);
  (local.tee $b.6778 (i32.const 0))
  drop
  
 )
)

;;; long[] ArithmeticExpressions.getLongArray()
(func $getLongArray<>:long<>@arithmeticexpressions.ArithmeticExpressions
 (result (ref null $java.lang.Object))
 (block
  ;; return null;
  ;; unimplemented statement ReturnStatement
  
 )

(ref.null $java.lang.Object)
)

;;; void ArithmeticExpressions.testCompoundBoxedTypes()
(func $testCompoundBoxedTypes<>:void@arithmeticexpressions.ArithmeticExpressions
 (local $c.6779 (ref null $java.lang.Integer))
 (local $d.6780 (ref null $java.lang.Integer))
 (local $i.6781 i32)
 (local $e.6782 (ref null $java.lang.Integer))
 (local $e2.6783 (ref null $java.lang.Double))
 (local $f.6784 (ref null $java.lang.Integer))
 (local $b.6785 (ref null $java.lang.Byte))
 (local $ch.6786 (ref null $java.lang.Character))
 (local $ref.6787 (ref null $arithmeticexpressions.ArithmeticExpressions.1Ref))
 (local $n.6788 i32)
 (block
  ;; Integer c = 1000;
  (local.tee $c.6779 (ref.null $java.lang.Integer))
  drop
  
  ;; Integer d = 10000;
  (local.tee $d.6780 (ref.null $java.lang.Integer))
  drop
  
  ;; (d += c);
  (ref.null $java.lang.Integer)
  drop
  ;; int i = 43;
  (local.tee $i.6781 (i32.const 43))
  drop
  
  ;; (d += i);
  (ref.null $java.lang.Integer)
  drop
  ;; (d <<= i);
  (ref.null $java.lang.Integer)
  drop
  ;; (i += c);
  (i32.const 0)
  drop
  ;; Integer e = ++c;
  (local.tee $e.6782 (ref.null $java.lang.Integer))
  drop
  
  ;; (e = ++c);
  (local.tee $e.6782 (ref.null $java.lang.Integer))
  drop
  ;; Double e2 = 100.0;
  (local.tee $e2.6783 (ref.null $java.lang.Double))
  drop
  
  ;; ++e2;
  (ref.null $java.lang.Double)
  drop
  ;; Integer f = c++;
  (local.tee $f.6784 (ref.null $java.lang.Integer))
  drop
  
  ;; (f = c++);
  (local.tee $f.6784 (ref.null $java.lang.Integer))
  drop
  ;; Byte b = 0;
  (local.tee $b.6785 (ref.null $java.lang.Byte))
  drop
  
  ;; b++;
  (ref.null $java.lang.Byte)
  drop
  ;; Character ch = 99;
  (local.tee $ch.6786 (ref.null $java.lang.Character))
  drop
  
  ;; ch++;
  (ref.null $java.lang.Character)
  drop
  ;; ++f.intValue();
  (i32.const 0)
  drop
  ;; f--.intValue();
  (i32.const 0)
  drop
  ;; Ref<Integer> ref = null;
  (local.tee $ref.6787 (ref.null $arithmeticexpressions.ArithmeticExpressions.1Ref))
  drop
  
  ;; ref.field++;
  (ref.null $java.lang.Integer)
  drop
  ;; int n = (1 + ref.field);
  (local.tee $n.6788 (i32.const 0))
  drop
  
 )
)

;;; Integer ArithmeticExpressions.getInteger()
(func $getInteger<>:java.lang.Integer@arithmeticexpressions.ArithmeticExpressions
 (result (ref null $java.lang.Integer))
 (block
  ;; return null;
  ;; unimplemented statement ReturnStatement
  
 )

(ref.null $java.lang.Integer)
)

;;; void ArithmeticExpressions.testSideEffect()
(func $testSideEffect<>:void@arithmeticexpressions.ArithmeticExpressions
 (block
  ;; (arithmeticexpressions.ArithmeticExpressions.getWithSideEffect().intField += 5);
  (i64.const 0)
  drop
 )
)

;;; ArithmeticExpressions ArithmeticExpressions.getWithSideEffect()
(func $getWithSideEffect<>:arithmeticexpressions.ArithmeticExpressions@arithmeticexpressions.ArithmeticExpressions
 (result (ref null $arithmeticexpressions.ArithmeticExpressions))
 (block
  ;; return null;
  ;; unimplemented statement ReturnStatement
  
 )

(ref.null $arithmeticexpressions.ArithmeticExpressions)
)

;;; void ArithmeticExpressions.testExtendedOperands()
(func $testExtendedOperands<>:void@arithmeticexpressions.ArithmeticExpressions
 (local $boxedInteger.6789 (ref null $java.lang.Integer))
 (local $i.6790 i32)
 (local $l.6791 i64)
 (local $d.6792 f64)
 (block
  ;; Integer boxedInteger = 3;
  (local.tee $boxedInteger.6789 (ref.null $java.lang.Integer))
  drop
  
  ;; int i;
  
  ;; long l;
  
  ;; double d;
  
  ;; (l = ((2 - boxedInteger) - 2));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (l = ((2 | boxedInteger) | 2));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (l = ((((1000000 * l) * 60) * 60) * 24));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (l = ((((24 * 60) * 60) * l) * 1000000));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (d = (l = (i = 20)));
  (local.tee $d.6792 (f64.const 0.0))
  drop
  ;; (l = (boxedInteger = (i = 20)));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (l = (((i + boxedInteger) + l) + 20));
  (local.tee $l.6791 (i64.const 0))
  drop
  ;; (d = ((20 + l) + d));
  (local.tee $d.6792 (f64.const 0.0))
  drop
 )
)

;;; CLASS  Ref

(type $arithmeticexpressions.ArithmeticExpressions.1Ref (struct
 (field $this@arithmeticexpressions.ArithmeticExpressions.1Ref (ref null $arithmeticexpressions.ArithmeticExpressions))
 (field $field@arithmeticexpressions.ArithmeticExpressions.1Ref (ref null $java.lang.Object))
))

