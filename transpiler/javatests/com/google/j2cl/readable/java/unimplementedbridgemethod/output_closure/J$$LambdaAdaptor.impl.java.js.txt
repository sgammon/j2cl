goog.module('unimplementedbridgemethod.J.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const J = goog.require('unimplementedbridgemethod.J$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @implements {J}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function(?string):number */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function(?string):number}*/
    this.f_fn__unimplementedbridgemethod_J_$LambdaAdaptor;
    this.$ctor__unimplementedbridgemethod_J_$LambdaAdaptor__unimplementedbridgemethod_J_$JsFunction(
        fn);
  }

  $ctor__unimplementedbridgemethod_J_$LambdaAdaptor__unimplementedbridgemethod_J_$JsFunction(
      /** ?function(?string):number */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__unimplementedbridgemethod_J_$LambdaAdaptor = fn;
  }
  /** @return {number} */
  m_foo__java_lang_String(/** ?string */ arg0) {
    let /** ?function(?string):number */ $function;
    return (
        $function = this.f_fn__unimplementedbridgemethod_J_$LambdaAdaptor,
        $function(arg0));
  }
  // Bridge method.
  /** @override @return {number} */
  m_foo__java_lang_Object(/** ?string */ arg0) {
    return this.m_foo__java_lang_String(
        /**@type {?string}*/ ($Casts.$to(arg0, j_l_String)));
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
J.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata(
    $LambdaAdaptor, 'unimplementedbridgemethod.J$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=J$$LambdaAdaptor.js.map
