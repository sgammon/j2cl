goog.module('forstatement.ForStatement$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');
let $LongUtils = goog.forwardDeclare('vmbootstrap.LongUtils$impl');

class ForStatement extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!ForStatement} */
  static $create__() {
    ForStatement.$clinit();
    let $instance = new ForStatement();
    $instance.$ctor__forstatement_ForStatement__();
    return $instance;
  }

  $ctor__forstatement_ForStatement__() {
    this.$ctor__java_lang_Object__();
  }

  m_test__() {
    for (let i = 0, count = 0; i < 100; i = i + 1 | 0) {
      count = count + 1 | 0;
    }
    for (let l = $Long.fromInt(0), count_1 = $Long.fromInt(0);
         $LongUtils.$less(l, $Long.fromInt(100));
         l = $LongUtils.$plus(l, $Long.fromInt(1)),
             l = $LongUtils.$plus(l, $Long.fromInt(1))) {
      count_1 = $LongUtils.$plus(count_1, $Long.fromInt(1));
    }
  }

  static $clinit() {
    ForStatement.$clinit = () => {};
    ForStatement.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof ForStatement;
  }

  static $loadModules() {
    $Long = goog.module.get('nativebootstrap.Long$impl');
    $LongUtils = goog.module.get('vmbootstrap.LongUtils$impl');
  }
}
$Util.$setClassMetadata(ForStatement, 'forstatement.ForStatement');

exports = ForStatement;

//# sourceMappingURL=ForStatement.js.map
