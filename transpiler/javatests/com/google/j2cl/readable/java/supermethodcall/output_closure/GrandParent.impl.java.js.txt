goog.module('supermethodcall.GrandParent$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

class GrandParent extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!GrandParent} */
  static $create__() {
    GrandParent.$clinit();
    let $instance = new GrandParent();
    $instance.$ctor__supermethodcall_GrandParent__();
    return $instance;
  }

  $ctor__supermethodcall_GrandParent__() {
    this.$ctor__java_lang_Object__();
  }

  m_grandParentSimplest__() {}

  m_grandParentWithParams__int(/** number */ foo) {}
  /** @return {*} */
  m_grandParentWithChangingReturn__() {
    return null;
  }

  static $clinit() {
    GrandParent.$clinit = () => {};
    GrandParent.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof GrandParent;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(GrandParent, 'supermethodcall.GrandParent');

exports = GrandParent;

//# sourceMappingURL=GrandParent.js.map
