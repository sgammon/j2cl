[Numbers] => [Numbers]
[Numbers] => [constructor]
[Numbers] => [super();] "switchstatement.Numbers.<synthetic: ctor_js>"
[Numbers] => [$create__java_lang_String__int]
[Numbers] => [let $instance = new Numbers();] "switchstatement.Numbers.<synthetic: ctor_create>"
[Numbers] => [$instance.$ctor__switchstatement_Numbers__java_lang_String__int($name, $ordinal);] "switchstatement.Numbers.<synthetic: ctor_create>"
[Numbers] => [return $instance;] "switchstatement.Numbers.<synthetic: ctor_create>"
[Numbers] => [$ctor__switchstatement_Numbers__java_lang_String__int]
[Numbers] => [this.f_name__java_lang_Enum_ = $name;] "switchstatement.Numbers.<init>"
[Numbers] => [this.f_ordinal__java_lang_Enum_ = $ordinal;] "switchstatement.Numbers.<init>"
[Numbers] => [this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);] "switchstatement.Numbers.<init>"
[Numbers] => [m_valueOf__java_lang_String]
[Numbers] => [Numbers.$clinit();] "switchstatement.Numbers.valueOf"
[Numbers] => [if ($Equality.$same(Numbers.f_namesToValuesMap__switchstatement_Numbers_, null)) {
   Numbers.f_namesToValuesMap__switchstatement_Numbers_ = $Enums.createMapFromValues(Numbers.m_values__());
  }] "switchstatement.Numbers.valueOf"
[Numbers] => [Numbers.f_namesToValuesMap__switchstatement_Numbers_ = $Enums.createMapFromValues(Numbers.m_values__());] "switchstatement.Numbers.valueOf"
[Numbers] => [return $Enums.getValueFromNameAndMap(name, Numbers.f_namesToValuesMap__switchstatement_Numbers_);] "switchstatement.Numbers.valueOf"
[Numbers] => [m_values__]
[Numbers] => [Numbers.$clinit();] "switchstatement.Numbers.values"
[Numbers] => [return /**@type {!Array<Numbers>}*/ ($Arrays.$init([Numbers.$static_ONE__switchstatement_Numbers, Numbers.$static_TWO__switchstatement_Numbers], Numbers));] "switchstatement.Numbers.values"
[ONE] => [get f_ONE__switchstatement_Numbers]
[ONE] => [return (Numbers.$clinit(), Numbers.$static_ONE__switchstatement_Numbers);] "switchstatement.Numbers.<synthetic: getter>"
[TWO] => [get f_TWO__switchstatement_Numbers]
[TWO] => [return (Numbers.$clinit(), Numbers.$static_TWO__switchstatement_Numbers);] "switchstatement.Numbers.<synthetic: getter>"
[Numbers] => [$clinit]
[Numbers] => [Numbers.$clinit = () =>{};] "switchstatement.Numbers.<clinit>"
[Numbers] => [Numbers.$loadModules();] "switchstatement.Numbers.<clinit>"
[Numbers] => [Enum.$clinit();] "switchstatement.Numbers.<clinit>"
[ONE] => [Numbers.$static_ONE__switchstatement_Numbers = Numbers.$create__java_lang_String__int($Util.$makeEnumName("ONE"), Numbers.$ordinal_ONE__switchstatement_Numbers);] "switchstatement.Numbers.<clinit>"
[TWO] => [Numbers.$static_TWO__switchstatement_Numbers = Numbers.$create__java_lang_String__int($Util.$makeEnumName("TWO"), Numbers.$ordinal_TWO__switchstatement_Numbers);] "switchstatement.Numbers.<clinit>"
[Numbers] => [Numbers.f_namesToValuesMap__switchstatement_Numbers_ = null;] "switchstatement.Numbers.<clinit>"
[Numbers] => [/**@private {!Numbers}*/
Numbers.$static_ONE__switchstatement_Numbers;]
[Numbers] => [/**@private {!Numbers}*/
Numbers.$static_TWO__switchstatement_Numbers;]
[Numbers] => [/**@type {Map<?string, !Numbers>}*/
Numbers.f_namesToValuesMap__switchstatement_Numbers_;]
[ONE] => [/**@const {number}*/
Numbers.$ordinal_ONE__switchstatement_Numbers = 0;]
[TWO] => [/**@const {number}*/
Numbers.$ordinal_TWO__switchstatement_Numbers = 1;]

