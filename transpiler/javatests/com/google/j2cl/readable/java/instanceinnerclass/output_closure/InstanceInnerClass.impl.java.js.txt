goog.module('instanceinnerclass.InstanceInnerClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InnerClass = goog.forwardDeclare('instanceinnerclass.InstanceInnerClass.InnerClass$impl');

class InstanceInnerClass extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {number}*/
    this.f_instanceField__instanceinnerclass_InstanceInnerClass = 0;
  }
  /** @return {!InstanceInnerClass} */
  static $create__() {
    InstanceInnerClass.$clinit();
    let $instance = new InstanceInnerClass();
    $instance.$ctor__instanceinnerclass_InstanceInnerClass__();
    return $instance;
  }

  $ctor__instanceinnerclass_InstanceInnerClass__() {
    this.$ctor__java_lang_Object__();
  }

  m_funOuter__() {}

  m_test__() {
    InnerClass.$create__instanceinnerclass_InstanceInnerClass(
        InstanceInnerClass.$create__());
  }

  static $clinit() {
    InstanceInnerClass.$clinit = () => {};
    InstanceInnerClass.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof InstanceInnerClass;
  }

  static $loadModules() {
    InnerClass = goog.module.get(
        'instanceinnerclass.InstanceInnerClass.InnerClass$impl');
  }
}
$Util.$setClassMetadata(
    InstanceInnerClass, 'instanceinnerclass.InstanceInnerClass');

exports = InstanceInnerClass;

//# sourceMappingURL=InstanceInnerClass.js.map
