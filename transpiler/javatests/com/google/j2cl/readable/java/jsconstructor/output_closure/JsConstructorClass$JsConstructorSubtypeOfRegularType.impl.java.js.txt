goog.module('jsconstructor.JsConstructorClass.JsConstructorSubtypeOfRegularType$impl');

const RegularType = goog.require('jsconstructor.JsConstructorClass.RegularType$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_Object = goog.forwardDeclare('java.lang.Object$impl');

class JsConstructorSubtypeOfRegularType extends RegularType {
  // JsConstructor 'JsConstructorSubtypeOfRegularType(Object)'.

  constructor(/** * */ object) {
    JsConstructorSubtypeOfRegularType.$clinit();
    super();
    this.$ctor__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__java_lang_Object(
        object);
  }
  // Initialization from constructor
  // 'JsConstructorSubtypeOfRegularType(Object)'.

  $ctor__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__java_lang_Object(
      /** * */ object) {
    this.$ctor__jsconstructor_JsConstructorClass_RegularType__java_lang_Object(
        object);
  }
  // Factory method corresponding to constructor
  // 'JsConstructorSubtypeOfRegularType()'.
  /** @return {!JsConstructorSubtypeOfRegularType} */
  static $create__() {
    JsConstructorSubtypeOfRegularType.$clinit();
    let $instance =
        new JsConstructorSubtypeOfRegularType(j_l_Object.$create__());
    $instance
        .$ctor__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__();
    return $instance;
  }
  // Initialization from constructor 'JsConstructorSubtypeOfRegularType()'.

  $ctor__jsconstructor_JsConstructorClass_JsConstructorSubtypeOfRegularType__() {
  }

  static $clinit() {
    JsConstructorSubtypeOfRegularType.$clinit = () => {};
    JsConstructorSubtypeOfRegularType.$loadModules();
    RegularType.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof JsConstructorSubtypeOfRegularType;
  }

  static $loadModules() {
    j_l_Object = goog.module.get('java.lang.Object$impl');
  }
}
$Util.$setClassMetadata(
    JsConstructorSubtypeOfRegularType,
    'jsconstructor.JsConstructorClass$JsConstructorSubtypeOfRegularType');

exports = JsConstructorSubtypeOfRegularType;

//# sourceMappingURL=JsConstructorClass$JsConstructorSubtypeOfRegularType.js.map
