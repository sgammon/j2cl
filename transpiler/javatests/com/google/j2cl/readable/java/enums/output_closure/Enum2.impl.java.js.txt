goog.module('enums.Enum2$impl');

const Enum = goog.require('java.lang.Enum$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Enum1 = goog.forwardDeclare('enums.Enum1$impl');
let $1 = goog.forwardDeclare('enums.Enum2.$1$impl');
let j_l_Object = goog.forwardDeclare('java.lang.Object$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Enums = goog.forwardDeclare('vmbootstrap.Enums$impl');

/**
 * @extends {Enum<Enum2>}
 */
class Enum2 extends Enum {
  /** @protected */
  constructor() {
    super();
    /**@type {number}*/
    this.f_foo__enums_Enum2 = 0;
  }
  // Factory method corresponding to constructor 'Enum2(String, int, int)'.
  /** @return {!Enum2} */
  static $create__java_lang_String__int__int(
      /** ?string */ $name, /** number */ $ordinal, /** number */ foo) {
    let $instance = new Enum2();
    $instance.$ctor__enums_Enum2__java_lang_String__int__int(
        $name, $ordinal, foo);
    return $instance;
  }
  // Initialization from constructor 'Enum2(String, int, int)'.

  $ctor__enums_Enum2__java_lang_String__int__int(
      /** ?string */ $name, /** number */ $ordinal, /** number */ foo) {
    this.f_name__java_lang_Enum_ = $name;
    this.f_ordinal__java_lang_Enum_ = $ordinal;
    this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);
    this.$init___$p_enums_Enum2();
    this.f_foo__enums_Enum2 = foo;
  }
  // Factory method corresponding to constructor 'Enum2(String, int, Enum)'.
  /** @return {!Enum2} */
  static $create__java_lang_String__int__java_lang_Enum(
      /** ?string */ $name, /** number */ $ordinal, /** Enum */ foo) {
    let $instance = new Enum2();
    $instance.$ctor__enums_Enum2__java_lang_String__int__java_lang_Enum(
        $name, $ordinal, foo);
    return $instance;
  }
  // Initialization from constructor 'Enum2(String, int, Enum)'.

  $ctor__enums_Enum2__java_lang_String__int__java_lang_Enum(
      /** ?string */ $name, /** number */ $ordinal, /** Enum */ foo) {
    this.f_name__java_lang_Enum_ = $name;
    this.f_ordinal__java_lang_Enum_ = $ordinal;
    this.$ctor__enums_Enum2__java_lang_String__int__int(
        $name, $ordinal, foo.ordinal());
  }
  // Factory method corresponding to constructor 'Enum2(String, int,
  // Object...)'.
  /** @return {!Enum2} */
  static $create__java_lang_String__int__arrayOf_java_lang_Object(
      /** ?string */ $name, /** number */ $ordinal, /** Array<*> */ somePars) {
    let $instance = new Enum2();
    $instance
        .$ctor__enums_Enum2__java_lang_String__int__arrayOf_java_lang_Object(
            $name, $ordinal, somePars);
    return $instance;
  }
  // Initialization from constructor 'Enum2(String, int, Object...)'.

  $ctor__enums_Enum2__java_lang_String__int__arrayOf_java_lang_Object(
      /** ?string */ $name, /** number */ $ordinal, /** Array<*> */ somePars) {
    this.f_name__java_lang_Enum_ = $name;
    this.f_ordinal__java_lang_Enum_ = $ordinal;
    this.$ctor__enums_Enum2__java_lang_String__int__int(
        $name, $ordinal, somePars.length);
  }
  /** @return {Enum2} */
  static m_f__java_lang_Object(/** * */ o) {
    Enum2.$clinit();
    return null;
  }
  /** @return {!Enum2} */
  static m_valueOf__java_lang_String(/** string */ name) {
    Enum2.$clinit();
    if ($Equality.$same(Enum2.f_namesToValuesMap__enums_Enum2_, null)) {
      Enum2.f_namesToValuesMap__enums_Enum2_ =
          $Enums.createMapFromValues(Enum2.m_values__());
    }
    return $Enums.getValueFromNameAndMap(
        name, Enum2.f_namesToValuesMap__enums_Enum2_);
  }
  /** @return {!Array<!Enum2>} */
  static m_values__() {
    Enum2.$clinit();
    return /**@type {!Array<Enum2>}*/ ($Arrays.$init(
        [
          Enum2.$static_VALUE1__enums_Enum2, Enum2.$static_VALUE2__enums_Enum2,
          Enum2.$static_VALUE3__enums_Enum2, Enum2.$static_VALUE4__enums_Enum2
        ],
        Enum2));
  }
  /** @private */
  $init___$p_enums_Enum2() {
    this.f_foo__enums_Enum2 = Enum1.f_V1__enums_Enum1.ordinal();
  }
  /** @return {!Enum2} */
  static get f_VALUE1__enums_Enum2() {
    return (Enum2.$clinit(), Enum2.$static_VALUE1__enums_Enum2);
  }
  /** @return {!Enum2} */
  static get f_VALUE2__enums_Enum2() {
    return (Enum2.$clinit(), Enum2.$static_VALUE2__enums_Enum2);
  }
  /** @return {!Enum2} */
  static get f_VALUE3__enums_Enum2() {
    return (Enum2.$clinit(), Enum2.$static_VALUE3__enums_Enum2);
  }
  /** @return {!Enum2} */
  static get f_VALUE4__enums_Enum2() {
    return (Enum2.$clinit(), Enum2.$static_VALUE4__enums_Enum2);
  }
  /** @return {Enum2} */
  static get f_C__enums_Enum2() {
    return (Enum2.$clinit(), Enum2.$static_C__enums_Enum2);
  }

  static set f_C__enums_Enum2(/** Enum2 */ value) {
    (Enum2.$clinit(), Enum2.$static_C__enums_Enum2 = value);
  }

  static $clinit() {
    Enum2.$clinit = () => {};
    Enum2.$loadModules();
    Enum.$clinit();
    Enum2.$static_VALUE1__enums_Enum2 =
        Enum2.$create__java_lang_String__int__int(
            $Util.$makeEnumName('VALUE1'), Enum2.$ordinal_VALUE1__enums_Enum2,
            2);
    Enum2.$static_VALUE2__enums_Enum2 =
        Enum2.$create__java_lang_String__int__java_lang_Enum(
            $Util.$makeEnumName('VALUE2'), Enum2.$ordinal_VALUE2__enums_Enum2,
            Enum1.f_V1__enums_Enum1);
    Enum2.$static_VALUE3__enums_Enum2 =
        Enum2.$create__java_lang_String__int__arrayOf_java_lang_Object(
            $Util.$makeEnumName('VALUE3'), Enum2.$ordinal_VALUE3__enums_Enum2,
            []);
    Enum2.$static_VALUE4__enums_Enum2 = $1.$create__java_lang_String__int__int(
        $Util.$makeEnumName('VALUE4'), Enum2.$ordinal_VALUE4__enums_Enum2, 5);
    Enum2.$static_C__enums_Enum2 =
        Enum2.m_f__java_lang_Object(j_l_Object.$create__());
    Enum2.f_namesToValuesMap__enums_Enum2_ = null;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Enum2;
  }

  static $loadModules() {
    Enum1 = goog.module.get('enums.Enum1$impl');
    $1 = goog.module.get('enums.Enum2.$1$impl');
    j_l_Object = goog.module.get('java.lang.Object$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Enums = goog.module.get('vmbootstrap.Enums$impl');
  }
}
/**@private {!Enum2}*/
Enum2.$static_VALUE1__enums_Enum2;
/**@private {!Enum2}*/
Enum2.$static_VALUE2__enums_Enum2;
/**@private {!Enum2}*/
Enum2.$static_VALUE3__enums_Enum2;
/**@private {!Enum2}*/
Enum2.$static_VALUE4__enums_Enum2;
/**@private {Enum2}*/
Enum2.$static_C__enums_Enum2;
/**@type {Map<?string, !Enum2>}*/
Enum2.f_namesToValuesMap__enums_Enum2_;
/**@const {number}*/
Enum2.$ordinal_VALUE1__enums_Enum2 = 0;
/**@const {number}*/
Enum2.$ordinal_VALUE2__enums_Enum2 = 1;
/**@const {number}*/
Enum2.$ordinal_VALUE3__enums_Enum2 = 2;
/**@const {number}*/
Enum2.$ordinal_VALUE4__enums_Enum2 = 3;
$Util.$setClassMetadataForEnum(Enum2, 'enums.Enum2');

exports = Enum2;

//# sourceMappingURL=Enum2.js.map
