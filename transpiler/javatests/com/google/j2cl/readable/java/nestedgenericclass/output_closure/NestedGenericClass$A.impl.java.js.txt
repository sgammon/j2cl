goog.module('nestedgenericclass.NestedGenericClass.A$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let NestedGenericClass = goog.forwardDeclare('nestedgenericclass.NestedGenericClass$impl');

/**
 * @template T, T_1
 */
class A extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {NestedGenericClass<T_1>}*/
    this.$outer_this__nestedgenericclass_NestedGenericClass_A;
  }
  /** @template T, T_1 @return {!A<T, T_1>} */
  static $create__nestedgenericclass_NestedGenericClass(
      /** NestedGenericClass<T_1> */ $outer_this) {
    A.$clinit();
    let $instance = new A();
    $instance
        .$ctor__nestedgenericclass_NestedGenericClass_A__nestedgenericclass_NestedGenericClass(
            $outer_this);
    return $instance;
  }

  $ctor__nestedgenericclass_NestedGenericClass_A__nestedgenericclass_NestedGenericClass(
      /** NestedGenericClass<T_1> */ $outer_this) {
    this.$outer_this__nestedgenericclass_NestedGenericClass_A = $outer_this;
    this.$ctor__java_lang_Object__();
  }

  static $clinit() {
    A.$clinit = () => {};
    A.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof A;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(A, 'nestedgenericclass.NestedGenericClass$A');

exports = A;

//# sourceMappingURL=NestedGenericClass$A.js.map
