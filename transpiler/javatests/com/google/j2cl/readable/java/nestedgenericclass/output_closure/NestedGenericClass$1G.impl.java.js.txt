goog.module('nestedgenericclass.NestedGenericClass.$1G$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let NestedGenericClass = goog.forwardDeclare('nestedgenericclass.NestedGenericClass$impl');
let $1H = goog.forwardDeclare('nestedgenericclass.NestedGenericClass.$1G.$1H$impl');

/**
 * @template T, T_1, T_2
 */
class $1G extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {NestedGenericClass<T_2>}*/
    this.$outer_this__nestedgenericclass_NestedGenericClass_1G;
  }
  /** @template T, T_1, T_2 @return {!$1G<T, T_1, T_2>} */
  static $create__nestedgenericclass_NestedGenericClass(
      /** NestedGenericClass<T_2> */ $outer_this) {
    $1G.$clinit();
    let $instance = new $1G();
    $instance
        .$ctor__nestedgenericclass_NestedGenericClass_1G__nestedgenericclass_NestedGenericClass(
            $outer_this);
    return $instance;
  }

  $ctor__nestedgenericclass_NestedGenericClass_1G__nestedgenericclass_NestedGenericClass(
      /** NestedGenericClass<T_2> */ $outer_this) {
    this.$outer_this__nestedgenericclass_NestedGenericClass_1G = $outer_this;
    this.$ctor__java_lang_Object__();
  }
  /** @template T_3 */
  m_bar__() {
    $1H.$create__nestedgenericclass_NestedGenericClass_1G(this);
  }

  static $clinit() {
    $1G.$clinit = () => {};
    $1G.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1G;
  }

  static $loadModules() {
    $1H = goog.module.get('nestedgenericclass.NestedGenericClass.$1G.$1H$impl');
  }
}
$Util.$setClassMetadata($1G, 'nestedgenericclass.NestedGenericClass$1G');

exports = $1G;

//# sourceMappingURL=NestedGenericClass$1G.js.map
