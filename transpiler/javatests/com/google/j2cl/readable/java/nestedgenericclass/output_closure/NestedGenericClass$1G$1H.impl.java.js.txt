goog.module('nestedgenericclass.NestedGenericClass.$1G.$1H$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1G = goog.forwardDeclare('nestedgenericclass.NestedGenericClass.$1G$impl');

/**
 * @template T, T_1, T_2, T_3, T_4
 */
class $1H extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {$1G<T_2, T_3, T_4>}*/
    this.$outer_this__nestedgenericclass_NestedGenericClass_1G_1H;
  }
  /** @template T, T_1, T_2, T_3, T_4 @return {!$1H<T, T_1, T_2, T_3, T_4>} */
  static $create__nestedgenericclass_NestedGenericClass_1G(
      /** $1G<T_2, T_3, T_4> */ $outer_this) {
    $1H.$clinit();
    let $instance = new $1H();
    $instance
        .$ctor__nestedgenericclass_NestedGenericClass_1G_1H__nestedgenericclass_NestedGenericClass_1G(
            $outer_this);
    return $instance;
  }

  $ctor__nestedgenericclass_NestedGenericClass_1G_1H__nestedgenericclass_NestedGenericClass_1G(
      /** $1G<T_2, T_3, T_4> */ $outer_this) {
    this.$outer_this__nestedgenericclass_NestedGenericClass_1G_1H = $outer_this;
    this.$ctor__java_lang_Object__();
  }

  static $clinit() {
    $1H.$clinit = () => {};
    $1H.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1H;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata($1H, 'nestedgenericclass.NestedGenericClass$1G$1H');

exports = $1H;

//# sourceMappingURL=NestedGenericClass$1G$1H.js.map
