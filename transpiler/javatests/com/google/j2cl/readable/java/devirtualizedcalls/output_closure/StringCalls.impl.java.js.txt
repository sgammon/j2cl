goog.module('devirtualizedcalls.StringCalls$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');

class StringCalls extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!StringCalls} */
  static $create__() {
    StringCalls.$clinit();
    let $instance = new StringCalls();
    $instance.$ctor__devirtualizedcalls_StringCalls__();
    return $instance;
  }

  $ctor__devirtualizedcalls_StringCalls__() {
    this.$ctor__java_lang_Object__();
  }

  m_main__() {
    let literal = 'String';
    let sub = j_l_String.m_substring__java_lang_String__int(literal, 1);
    let sub2 =
        j_l_String.m_substring__java_lang_String__int__int(literal, 2, 3);
    let trimmed = j_l_String.m_trim__java_lang_String(literal);
    let newString = j_l_String.m_toString__java_lang_String(literal);
  }

  static $clinit() {
    StringCalls.$clinit = () => {};
    StringCalls.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof StringCalls;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
  }
}
$Util.$setClassMetadata(StringCalls, 'devirtualizedcalls.StringCalls');

exports = StringCalls;

//# sourceMappingURL=StringCalls.js.map
