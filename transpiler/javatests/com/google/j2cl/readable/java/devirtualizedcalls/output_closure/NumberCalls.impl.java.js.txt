goog.module('devirtualizedcalls.NumberCalls$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Boolean = goog.forwardDeclare('java.lang.Boolean$impl');
let Byte = goog.forwardDeclare('java.lang.Byte$impl');
let Character = goog.forwardDeclare('java.lang.Character$impl');
let Double = goog.forwardDeclare('java.lang.Double$impl');
let Float = goog.forwardDeclare('java.lang.Float$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Long = goog.forwardDeclare('java.lang.Long$impl');
let Short = goog.forwardDeclare('java.lang.Short$impl');
let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');
let $Numbers = goog.forwardDeclare('vmbootstrap.Numbers$impl');

class NumberCalls extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!NumberCalls} */
  static $create__() {
    NumberCalls.$clinit();
    let $instance = new NumberCalls();
    $instance.$ctor__devirtualizedcalls_NumberCalls__();
    return $instance;
  }

  $ctor__devirtualizedcalls_NumberCalls__() {
    this.$ctor__java_lang_Object__();
  }

  m_main__() {
    let i = Integer.$create__int(1);
    $Numbers.m_byteValue__java_lang_Number(i);
    $Numbers.m_doubleValue__java_lang_Number(i);
    $Numbers.m_floatValue__java_lang_Number(i);
    $Numbers.m_intValue__java_lang_Number(i);
    $Numbers.m_longValue__java_lang_Number(i);
    $Numbers.m_shortValue__java_lang_Number(i);
    let ii = Integer.$create__int(1);
    ii.m_byteValue__();
    ii.m_doubleValue__();
    ii.m_floatValue__();
    ii.m_intValue__();
    ii.m_longValue__();
    ii.m_shortValue__();
    let d = Double.$create__double(1.1);
    $Numbers.m_byteValue__java_lang_Number(d);
    $Numbers.m_doubleValue__java_lang_Number(d);
    $Numbers.m_floatValue__java_lang_Number(d);
    $Numbers.m_intValue__java_lang_Number(d);
    $Numbers.m_longValue__java_lang_Number(d);
    $Numbers.m_shortValue__java_lang_Number(d);
    let dd = Double.$create__double(1.1);
    Double.m_byteValue__java_lang_Double(dd);
    Double.m_doubleValue__java_lang_Double(dd);
    Double.m_floatValue__java_lang_Double(dd);
    Double.m_intValue__java_lang_Double(dd);
    Double.m_longValue__java_lang_Double(dd);
    Double.m_shortValue__java_lang_Double(dd);
    let s = Short.$create__short(1);
    $Numbers.m_byteValue__java_lang_Number(s);
    $Numbers.m_doubleValue__java_lang_Number(s);
    $Numbers.m_floatValue__java_lang_Number(s);
    $Numbers.m_intValue__java_lang_Number(s);
    $Numbers.m_longValue__java_lang_Number(s);
    $Numbers.m_shortValue__java_lang_Number(s);
    let ss = Short.$create__short(1);
    ss.m_byteValue__();
    ss.m_doubleValue__();
    ss.m_floatValue__();
    ss.m_intValue__();
    ss.m_longValue__();
    ss.m_shortValue__();
    let b = Byte.$create__byte(1);
    $Numbers.m_byteValue__java_lang_Number(b);
    $Numbers.m_doubleValue__java_lang_Number(b);
    $Numbers.m_floatValue__java_lang_Number(b);
    $Numbers.m_intValue__java_lang_Number(b);
    $Numbers.m_longValue__java_lang_Number(b);
    $Numbers.m_shortValue__java_lang_Number(b);
    let bb = Byte.$create__byte(1);
    bb.m_byteValue__();
    bb.m_doubleValue__();
    bb.m_floatValue__();
    bb.m_intValue__();
    bb.m_longValue__();
    bb.m_shortValue__();
    let f = Float.$create__float(1.100000023841858);
    $Numbers.m_byteValue__java_lang_Number(f);
    $Numbers.m_doubleValue__java_lang_Number(f);
    $Numbers.m_floatValue__java_lang_Number(f);
    $Numbers.m_intValue__java_lang_Number(f);
    $Numbers.m_longValue__java_lang_Number(f);
    $Numbers.m_shortValue__java_lang_Number(f);
    let ff = Float.$create__float(1.100000023841858);
    ff.m_byteValue__();
    ff.m_doubleValue__();
    ff.m_floatValue__();
    ff.m_intValue__();
    ff.m_longValue__();
    ff.m_shortValue__();
    let l = Long.$create__long($Long.fromInt(1));
    $Numbers.m_byteValue__java_lang_Number(l);
    $Numbers.m_doubleValue__java_lang_Number(l);
    $Numbers.m_floatValue__java_lang_Number(l);
    $Numbers.m_intValue__java_lang_Number(l);
    $Numbers.m_longValue__java_lang_Number(l);
    $Numbers.m_shortValue__java_lang_Number(l);
    let ll = Long.$create__long($Long.fromInt(1));
    ll.m_byteValue__();
    ll.m_doubleValue__();
    ll.m_floatValue__();
    ll.m_intValue__();
    ll.m_longValue__();
    ll.m_shortValue__();
    let c = Character.$create__char(97 /* "a" */);
    c.m_charValue__();
    let bool = Boolean.$create__boolean(true);
    Boolean.m_booleanValue__java_lang_Boolean(bool);
  }

  static $clinit() {
    NumberCalls.$clinit = () => {};
    NumberCalls.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof NumberCalls;
  }

  static $loadModules() {
    Boolean = goog.module.get('java.lang.Boolean$impl');
    Byte = goog.module.get('java.lang.Byte$impl');
    Character = goog.module.get('java.lang.Character$impl');
    Double = goog.module.get('java.lang.Double$impl');
    Float = goog.module.get('java.lang.Float$impl');
    Integer = goog.module.get('java.lang.Integer$impl');
    Long = goog.module.get('java.lang.Long$impl');
    Short = goog.module.get('java.lang.Short$impl');
    $Long = goog.module.get('nativebootstrap.Long$impl');
    $Numbers = goog.module.get('vmbootstrap.Numbers$impl');
  }
}
$Util.$setClassMetadata(NumberCalls, 'devirtualizedcalls.NumberCalls');

exports = NumberCalls;

//# sourceMappingURL=NumberCalls.js.map
