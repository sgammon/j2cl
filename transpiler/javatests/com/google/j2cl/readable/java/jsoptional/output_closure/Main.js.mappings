[Main] => [Main]
[Main] => [constructor]
[a] => [a] "a"
[Main] => [Main.$clinit();] "jsoptional.Main.<init>"
[Main] => [super();] "jsoptional.Main.<init>"
[Main] => [/**@type {?function(?string=, ...*):*}*/
  this.f_f__jsoptional_Main;] "jsoptional.Main.<init>"
[f] => [f_f__jsoptional_Main]
[Main] => [this.$ctor__jsoptional_Main__java_lang_String(a);] "jsoptional.Main.<init>"
[method1] => [method1]
[i1] => [i1] "i1"
[d] => [d] "d"
[i] => [i] "i"
[method2] => [method2]
[s1] => [s1] "s1"
[d] => [d] "d"
[i] => [i] "i"
[method2] => [$Arrays.$stampType(i, Boolean, 1);] "jsoptional.Main.method2"
[Main] => [$ctor__jsoptional_Main__java_lang_String]
[a] => [a] "a"
[Main] => [this.$ctor__java_lang_Object__();] "jsoptional.Main.<init>"
[Main] => [this.$init___$p_jsoptional_Main();] "jsoptional.Main.<init>"
[testFunction] => [m_testFunction__jsoptional_Main_Function]
[f] => [f] "f"
[testOptionalFunction] => [testOptionalFunction]
[f] => [f] "f"
[Main] => [$init___$p_jsoptional_Main]
[Function f = (s, varargs) -> s;] => [this.f_f__jsoptional_Main = (/** ?string= */ s, .../** ...* */ varargs) =>{
   return s;
  };] "jsoptional.Main.<init>"
[s] => [s] "s"
[varargs] => [varargs] "varargs"
[s] => [return s;] "jsoptional.Main.<lambda in <init>>"
[Main] => [$clinit]
[Main] => [Main.$clinit = () =>{};] "jsoptional.Main.<clinit>"
[Main] => [Main.$loadModules();] "jsoptional.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "jsoptional.Main.<clinit>"

