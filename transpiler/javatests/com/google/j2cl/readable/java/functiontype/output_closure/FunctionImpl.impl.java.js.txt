goog.module('functiontype.FunctionImpl$impl');

const functiontype_Function = goog.require('functiontype.Function$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @implements {functiontype_Function}
 */
class FunctionImpl extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!FunctionImpl} */
  static $create__() {
    FunctionImpl.$clinit();
    let $instance = new FunctionImpl();
    $instance.$ctor__functiontype_FunctionImpl__();
    return $instance;
  }

  $ctor__functiontype_FunctionImpl__() {
    this.$ctor__java_lang_Object__();
  }

  m_test__functiontype_Function(/** functiontype_Function */ f) {}

  static $clinit() {
    FunctionImpl.$clinit = () => {};
    FunctionImpl.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof FunctionImpl;
  }

  static $loadModules() {}
}
functiontype_Function.$markImplementor(FunctionImpl);
$Util.$setClassMetadata(FunctionImpl, 'functiontype.FunctionImpl');

exports = FunctionImpl;

//# sourceMappingURL=FunctionImpl.js.map
