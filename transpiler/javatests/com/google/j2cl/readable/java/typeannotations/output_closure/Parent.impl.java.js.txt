goog.module('typeannotations.Parent$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ArrayList = goog.forwardDeclare('java.util.ArrayList$impl');
let List = goog.forwardDeclare('java.util.List$impl');

class Parent extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!Parent} */
  static $create__() {
    Parent.$clinit();
    let $instance = new Parent();
    $instance.$ctor__typeannotations_Parent__();
    return $instance;
  }

  $ctor__typeannotations_Parent__() {
    this.$ctor__java_lang_Object__();
  }
  /** @return {Parent} */
  m_m__java_lang_String__typeannotations_Parent(
      /** string */ s, /** Parent */ c) {
    return c;
  }
  /** @return {List<!Parent>} */
  m_m__java_util_List__typeannotations_Parent(
      /** List<string> */ l, /** Parent */ c) {
    return /**@type {!ArrayList<!Parent>}*/ (ArrayList.$create__());
  }

  static $clinit() {
    Parent.$clinit = () => {};
    Parent.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Parent;
  }

  static $loadModules() {
    ArrayList = goog.module.get('java.util.ArrayList$impl');
  }
}
$Util.$setClassMetadata(Parent, 'typeannotations.Parent');

exports = Parent;

//# sourceMappingURL=Parent.js.map
