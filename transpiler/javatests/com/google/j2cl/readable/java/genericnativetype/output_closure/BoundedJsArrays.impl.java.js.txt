goog.module('genericnativetype.BoundedJsArrays$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Overlay = goog.forwardDeclare('genericnativetype.BoundedJsArray.$Overlay$impl');

class BoundedJsArrays extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!BoundedJsArrays} */
  static $create__() {
    let $instance = new BoundedJsArrays();
    $instance.$ctor__genericnativetype_BoundedJsArrays__();
    return $instance;
  }

  $ctor__genericnativetype_BoundedJsArrays__() {
    this.$ctor__java_lang_Object__();
  }
  /** @template V @return {Array<V>} */
  static m_create__() {
    BoundedJsArrays.$clinit();
    return /**@type {Array<V>}*/ ($Overlay.m_create__());
  }
  /** @template V @return {Array<V>} */
  static m_createWithSize__int(/** number */ size) {
    BoundedJsArrays.$clinit();
    return /**@type {Array<V>}*/ ($Overlay.m_create__int(size));
  }

  static $clinit() {
    BoundedJsArrays.$clinit = () => {};
    BoundedJsArrays.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof BoundedJsArrays;
  }

  static $loadModules() {
    $Overlay =
        goog.module.get('genericnativetype.BoundedJsArray.$Overlay$impl');
  }
}
$Util.$setClassMetadata(BoundedJsArrays, 'genericnativetype.BoundedJsArrays');

exports = BoundedJsArrays;

//# sourceMappingURL=BoundedJsArrays.js.map
