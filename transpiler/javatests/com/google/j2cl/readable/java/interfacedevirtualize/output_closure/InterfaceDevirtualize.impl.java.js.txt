goog.module('interfacedevirtualize.InterfaceDevirtualize$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Boolean = goog.forwardDeclare('java.lang.Boolean$impl');
let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');
let Double = goog.forwardDeclare('java.lang.Double$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $Comparables = goog.forwardDeclare('vmbootstrap.Comparables$impl');

class InterfaceDevirtualize extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!InterfaceDevirtualize} */
  static $create__() {
    InterfaceDevirtualize.$clinit();
    let $instance = new InterfaceDevirtualize();
    $instance.$ctor__interfacedevirtualize_InterfaceDevirtualize__();
    return $instance;
  }

  $ctor__interfacedevirtualize_InterfaceDevirtualize__() {
    this.$ctor__java_lang_Object__();
  }
  /** @template T @return {number} */
  m_compare0__java_lang_Comparable__java_lang_Object(
      /** (Comparable<T>|boolean|number|string) */ c, /** T */ t) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, t);
  }
  /** @return {number} */
  m_compare1__java_lang_Comparable__java_lang_Object(
      /** (Comparable|boolean|number|string) */ c, /** * */ o) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, o);
  }
  /** @return {number} */
  m_compare2__java_lang_Comparable__java_lang_Double(
      /** (Comparable<?number>|boolean|number|string) */ c, /** ?number */ d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }
  /** @return {number} */
  m_compare3__java_lang_Double__java_lang_Double(
      /** ?number */ d1, /** ?number */ d2) {
    return Double.m_compareTo__java_lang_Double__java_lang_Double(d1, d2);
  }
  /** @return {number} */
  m_compare2__java_lang_Comparable__java_lang_Boolean(
      /** (Comparable<?boolean>|boolean|number|string) */ c,
      /** ?boolean */ d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }
  /** @return {number} */
  m_compare3__java_lang_Boolean__java_lang_Boolean(
      /** ?boolean */ d1, /** ?boolean */ d2) {
    return Boolean.m_compareTo__java_lang_Boolean__java_lang_Boolean(d1, d2);
  }
  /** @return {number} */
  m_compare2__java_lang_Comparable__java_lang_Integer(
      /** (Comparable<Integer>|boolean|number|string) */ c, /** Integer */ d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }
  /** @return {number} */
  m_compare3__java_lang_Integer__java_lang_Integer(
      /** Integer */ d1, /** Integer */ d2) {
    return d1.m_compareTo__java_lang_Integer(d2);
  }

  static $clinit() {
    InterfaceDevirtualize.$clinit = () => {};
    InterfaceDevirtualize.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof InterfaceDevirtualize;
  }

  static $loadModules() {
    Boolean = goog.module.get('java.lang.Boolean$impl');
    Double = goog.module.get('java.lang.Double$impl');
    $Comparables = goog.module.get('vmbootstrap.Comparables$impl');
  }
}
$Util.$setClassMetadata(
    InterfaceDevirtualize, 'interfacedevirtualize.InterfaceDevirtualize');

exports = InterfaceDevirtualize;

//# sourceMappingURL=InterfaceDevirtualize.js.map
