goog.module('typewildcards.TypeWildCards.Y.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const Y = goog.require('typewildcards.TypeWildCards.Y$impl');

/**
 * @implements {Y}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function():void */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function():void}*/
    this.f_fn__typewildcards_TypeWildCards_Y_$LambdaAdaptor;
    this.$ctor__typewildcards_TypeWildCards_Y_$LambdaAdaptor__typewildcards_TypeWildCards_Y_$JsFunction(
        fn);
  }

  $ctor__typewildcards_TypeWildCards_Y_$LambdaAdaptor__typewildcards_TypeWildCards_Y_$JsFunction(
      /** ?function():void */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__typewildcards_TypeWildCards_Y_$LambdaAdaptor = fn;
  }
  /** @override */
  m_n__() {
    {
      let $function = this.f_fn__typewildcards_TypeWildCards_Y_$LambdaAdaptor;
      $function();
    }
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
Y.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata(
    $LambdaAdaptor, 'typewildcards.TypeWildCards$Y$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=TypeWildCards$Y$$LambdaAdaptor.js.map
