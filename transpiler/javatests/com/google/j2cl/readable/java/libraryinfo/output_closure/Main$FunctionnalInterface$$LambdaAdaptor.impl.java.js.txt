goog.module('libraryinfo.Main.FunctionnalInterface.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const FunctionnalInterface = goog.require('libraryinfo.Main.FunctionnalInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @implements {FunctionnalInterface}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function():void */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function():void}*/
    this.f_fn__libraryinfo_Main_FunctionnalInterface_$LambdaAdaptor;
    this.$ctor__libraryinfo_Main_FunctionnalInterface_$LambdaAdaptor__libraryinfo_Main_FunctionnalInterface_$JsFunction(
        fn);
  }

  $ctor__libraryinfo_Main_FunctionnalInterface_$LambdaAdaptor__libraryinfo_Main_FunctionnalInterface_$JsFunction(
      /** ?function():void */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__libraryinfo_Main_FunctionnalInterface_$LambdaAdaptor = fn;
  }
  /** @override */
  m_foo__() {
    {
      let $function =
          this.f_fn__libraryinfo_Main_FunctionnalInterface_$LambdaAdaptor;
      $function();
    }
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {}
}
FunctionnalInterface.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata(
    $LambdaAdaptor, 'libraryinfo.Main$FunctionnalInterface$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=Main$FunctionnalInterface$$LambdaAdaptor.js.map
