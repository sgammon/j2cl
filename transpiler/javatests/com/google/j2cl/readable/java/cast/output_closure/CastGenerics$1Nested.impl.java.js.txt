goog.module('cast.CastGenerics.$1Nested$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let CastGenerics = goog.forwardDeclare('cast.CastGenerics$impl');
let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @template SS, TT, T, E
 */
class $1Nested extends j_l_Object {
  /** @protected */
  constructor() {
    super();
    /**@type {CastGenerics<T, E>}*/
    this.$outer_this__cast_CastGenerics_1Nested;
  }
  /** @template SS, TT, T, E @return {!$1Nested<SS, TT, T, E>} */
  static $create__cast_CastGenerics(/** CastGenerics<T, E> */ $outer_this) {
    $1Nested.$clinit();
    let $instance = new $1Nested();
    $instance.$ctor__cast_CastGenerics_1Nested__cast_CastGenerics($outer_this);
    return $instance;
  }

  $ctor__cast_CastGenerics_1Nested__cast_CastGenerics(
      /** CastGenerics<T, E> */ $outer_this) {
    this.$outer_this__cast_CastGenerics_1Nested = $outer_this;
    this.$ctor__java_lang_Object__();
  }

  m_nestedGenericMethod__java_lang_Object_$p_cast_CastGenerics_1Nested(
      /** * */ o) {
    let t = /**@type {TT}*/ ($Casts.$to(o, Enum));
  }

  static $clinit() {
    $1Nested.$clinit = () => {};
    $1Nested.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $1Nested;
  }

  static $loadModules() {
    Enum = goog.module.get('java.lang.Enum$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata($1Nested, 'cast.CastGenerics$1Nested');

exports = $1Nested;

//# sourceMappingURL=CastGenerics$1Nested.js.map
