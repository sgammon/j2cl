goog.module('bridgemethods.BridgeMethodShadowedSignature.C$impl');

const B = goog.require('bridgemethods.BridgeMethodShadowedSignature.B$impl');
const I = goog.require('bridgemethods.BridgeMethodShadowedSignature.I$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Consumer = goog.forwardDeclare('java.util.function.Consumer$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @template C1
 * @extends {B<C1, Consumer<?>>}
 * @implements {I<C1>}
 */
class C extends B {
  /** @protected */
  constructor() {
    super();
  }
  /** @template C1 @return {!C<C1>} */
  static $create__() {
    C.$clinit();
    let $instance = new C();
    $instance.$ctor__bridgemethods_BridgeMethodShadowedSignature_C__();
    return $instance;
  }

  $ctor__bridgemethods_BridgeMethodShadowedSignature_C__() {
    this.$ctor__bridgemethods_BridgeMethodShadowedSignature_B__();
  }
  // Specialized bridge method.
  /** @override @return {?string} */
  m_get__java_util_function_Consumer(/** Consumer<?> */ arg0) {
    return super.m_get__java_lang_Object(arg0);
  }
  // Bridge method.
  /** @override @return {?string} */
  m_get__java_lang_Object(/** Consumer<?> */ arg0) {
    return this.m_get__java_util_function_Consumer(
        /**@type {Consumer<*>}*/ ($Casts.$to(arg0, Consumer)));
  }

  static $clinit() {
    C.$clinit = () => {};
    C.$loadModules();
    B.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof C;
  }

  static $loadModules() {
    Consumer = goog.module.get('java.util.function.Consumer$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
I.$markImplementor(C);
$Util.$setClassMetadata(C, 'bridgemethods.BridgeMethodShadowedSignature$C');

exports = C;

//# sourceMappingURL=BridgeMethodShadowedSignature$C.js.map
