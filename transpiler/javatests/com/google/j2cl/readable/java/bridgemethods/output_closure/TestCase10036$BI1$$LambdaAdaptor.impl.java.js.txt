goog.module('bridgemethods.TestCase10036.BI1.$LambdaAdaptor$impl');

const BI1 = goog.require('bridgemethods.TestCase10036.BI1$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let BI3 = goog.forwardDeclare('bridgemethods.TestCase10036.BI3$impl');

/**
 * @implements {BI1}
 */
class $LambdaAdaptor extends j_l_Object {
  constructor(/** ?function(?string):?string */ fn) {
    $LambdaAdaptor.$clinit();
    super();
    /**@type {?function(?string):?string}*/
    this.f_fn__bridgemethods_TestCase10036_BI1_$LambdaAdaptor;
    this.$ctor__bridgemethods_TestCase10036_BI1_$LambdaAdaptor__bridgemethods_TestCase10036_BI1_$JsFunction(
        fn);
  }

  $ctor__bridgemethods_TestCase10036_BI1_$LambdaAdaptor__bridgemethods_TestCase10036_BI1_$JsFunction(
      /** ?function(?string):?string */ fn) {
    this.$ctor__java_lang_Object__();
    this.f_fn__bridgemethods_TestCase10036_BI1_$LambdaAdaptor = fn;
  }
  /** @override @return {?string} */
  get(/** ?string */ arg0) {
    let /** ?function(?string):?string */ $function;
    return (
        $function = this.f_fn__bridgemethods_TestCase10036_BI1_$LambdaAdaptor,
        $function(arg0));
  }

  static $clinit() {
    $LambdaAdaptor.$clinit = () => {};
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
    BI3.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof $LambdaAdaptor;
  }

  static $loadModules() {
    BI3 = goog.module.get('bridgemethods.TestCase10036.BI3$impl');
  }
}
BI1.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata(
    $LambdaAdaptor, 'bridgemethods.TestCase10036$BI1$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=TestCase10036$BI1$$LambdaAdaptor.js.map
