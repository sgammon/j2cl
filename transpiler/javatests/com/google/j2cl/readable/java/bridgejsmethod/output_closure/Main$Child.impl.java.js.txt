goog.module('bridgejsmethod.Main.Child$impl');

const Parent = goog.require('bridgejsmethod.Main.Parent$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('bridgejsmethod.Main$impl');

/**
 * @extends {Parent<Child>}
 */
class Child extends Parent {
  /** @protected */
  constructor() {
    super();
    /**@type {Main}*/
    this.$outer_this__bridgejsmethod_Main_Child;
  }
  /** @return {!Child} */
  static $create__bridgejsmethod_Main(/** Main */ $outer_this) {
    Child.$clinit();
    let $instance = new Child();
    $instance.$ctor__bridgejsmethod_Main_Child__bridgejsmethod_Main(
        $outer_this);
    return $instance;
  }

  $ctor__bridgejsmethod_Main_Child__bridgejsmethod_Main(
      /** Main */ $outer_this) {
    this.$outer_this__bridgejsmethod_Main_Child = $outer_this;
    this.$ctor__bridgejsmethod_Main_Parent__bridgejsmethod_Main($outer_this);
  }

  static $clinit() {
    Child.$clinit = () => {};
    Child.$loadModules();
    Parent.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof Child;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(Child, 'bridgejsmethod.Main$Child');

exports = Child;

//# sourceMappingURL=Main$Child.js.map
