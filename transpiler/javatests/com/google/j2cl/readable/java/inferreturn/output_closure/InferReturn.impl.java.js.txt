goog.module('inferreturn.InferReturn$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ArrayList = goog.forwardDeclare('java.util.ArrayList$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');

/**
 * @template T
 */
class InferReturn extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @template T @return {!InferReturn<T>} */
  static $create__() {
    InferReturn.$clinit();
    let $instance = new InferReturn();
    $instance.$ctor__inferreturn_InferReturn__();
    return $instance;
  }

  $ctor__inferreturn_InferReturn__() {
    this.$ctor__java_lang_Object__();
  }
  /** @template T_1 @return {InferReturn<T_1>} */
  static m_inferGeneric__java_lang_Object(/** T_1 */ foo) {
    InferReturn.$clinit();
    return /**@type {!InferReturn<T_1>}*/ (InferReturn.$create__());
  }
  /** @return {InferReturn<InferReturn<?string>>} */
  static m_tightenType__inferreturn_InferReturn(
      /** InferReturn<?string> */ foo) {
    InferReturn.$clinit();
    if (!$Equality.$same(foo, null)) {
      return /**@type {InferReturn<InferReturn<?string>>}*/ (
          InferReturn.m_inferGeneric__java_lang_Object(foo));
    }
    return null;
  }

  static m_main__() {
    InferReturn.$clinit();
    let list = /**@type {ArrayList<*>}*/ (
        InferReturn.m_newArrayList__java_lang_Object('foo'));
    InferReturn.m_acceptsArrayListOfObject__java_util_ArrayList(list);
    let array = InferReturn.m_newArray__java_lang_Object('foo');
    InferReturn.m_acceptsArrayOfObject__arrayOf_java_lang_Object(array);
  }
  /** @template V @return {ArrayList<V>} */
  static m_newArrayList__java_lang_Object(/** V */ foo) {
    InferReturn.$clinit();
    return /**@type {!ArrayList<V>}*/ (ArrayList.$create__());
  }
  /** @template V @return {Array<V>} */
  static m_newArray__java_lang_Object(/** V */ foo) {
    InferReturn.$clinit();
    return /**@type {Array<V>}*/ (new Array(0));
  }

  static m_acceptsArrayListOfObject__java_util_ArrayList(
      /** ArrayList<*> */ foo) {
    InferReturn.$clinit();
  }

  static m_acceptsArrayOfObject__arrayOf_java_lang_Object(/** Array<*> */ foo) {
    InferReturn.$clinit();
  }

  static $clinit() {
    InferReturn.$clinit = () => {};
    InferReturn.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof InferReturn;
  }

  static $loadModules() {
    ArrayList = goog.module.get('java.util.ArrayList$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
  }
}
$Util.$setClassMetadata(InferReturn, 'inferreturn.InferReturn');

exports = InferReturn;

//# sourceMappingURL=InferReturn.js.map
