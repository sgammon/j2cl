goog.module('jsvarargs.Main.AbstractMethodWithVarargs$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @abstract
 */
class AbstractMethodWithVarargs extends j_l_Object {
  constructor() {
    AbstractMethodWithVarargs.$clinit();
    super();
    this.$ctor__jsvarargs_Main_AbstractMethodWithVarargs__();
  }

  $ctor__jsvarargs_Main_AbstractMethodWithVarargs__() {
    this.$ctor__java_lang_Object__();
  }
  /** @abstract */
  abstractMethod(.../** ...number */ args) {}

  static $clinit() {
    AbstractMethodWithVarargs.$clinit = () => {};
    AbstractMethodWithVarargs.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof AbstractMethodWithVarargs;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    AbstractMethodWithVarargs, 'jsvarargs.Main$AbstractMethodWithVarargs');

exports = AbstractMethodWithVarargs;

//# sourceMappingURL=Main$AbstractMethodWithVarargs.js.map
