goog.module('packageprivatemethods.package1.SuperParent$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

class SuperParent extends j_l_Object {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!SuperParent} */
  static $create__() {
    SuperParent.$clinit();
    let $instance = new SuperParent();
    $instance.$ctor__packageprivatemethods_package1_SuperParent__();
    return $instance;
  }

  $ctor__packageprivatemethods_package1_SuperParent__() {
    this.$ctor__java_lang_Object__();
  }
  /** @return {number} */
  m_foo__int_$pp_packageprivatemethods_package1(/** number */ a) {
    return a - 1 | 0;
  }
  /** @return {number} */
  m_fun__int__int_$pp_packageprivatemethods_package1(
      /** number */ a, /** number */ b) {
    return a + b | 0;
  }
  /** @return {number} */
  m_bar__int__int__int_$pp_packageprivatemethods_package1(
      /** number */ a, /** number */ b, /** number */ c) {
    return a + b + c | 0;
  }

  static $clinit() {
    SuperParent.$clinit = () => {};
    SuperParent.$loadModules();
    j_l_Object.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof SuperParent;
  }

  static $loadModules() {}
}
$Util.$setClassMetadata(
    SuperParent, 'packageprivatemethods.package1.SuperParent');

exports = SuperParent;

//# sourceMappingURL=SuperParent.js.map
