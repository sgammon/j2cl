goog.module('simplegenericinterface.SimpleGenericInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('simplegenericinterface.SimpleGenericInterface.$LambdaAdaptor$impl');

/**
 * @interface
 * @template T
 */
class SimpleGenericInterface {
  /** @abstract @return {T} */
  m_fun__java_lang_Object(/** T */ t) {}
  /** @template T @return {SimpleGenericInterface<T>} */
  static $adapt(/** ?function(T):T */ fn) {
    SimpleGenericInterface.$clinit();
    return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
  }

  static $clinit() {
    SimpleGenericInterface.$clinit = () => {};
    SimpleGenericInterface.$loadModules();
  }

  static $markImplementor(/** Function */ ctor) {
    ctor.prototype.$implements__simplegenericinterface_SimpleGenericInterface =
        true;
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance != null &&
        !!instance.$implements__simplegenericinterface_SimpleGenericInterface;
  }

  static $loadModules() {
    $LambdaAdaptor = goog.module.get(
        'simplegenericinterface.SimpleGenericInterface.$LambdaAdaptor$impl');
  }
}
SimpleGenericInterface.$markImplementor(
    /**@type {Function}*/ (SimpleGenericInterface));
$Util.$setClassMetadataForInterface(
    SimpleGenericInterface, 'simplegenericinterface.SimpleGenericInterface');

exports = SimpleGenericInterface;

//# sourceMappingURL=SimpleGenericInterface.js.map
