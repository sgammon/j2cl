goog.module('com.google.j2cl.transpiler.readable.bridgemethods.AccidentalOverride$impl');

const A = goog.require('com.google.j2cl.transpiler.readable.bridgemethods.A$impl');
const SpecializedInterface = goog.require('com.google.j2cl.transpiler.readable.bridgemethods.SpecializedInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @extends {A<?string, ?string>}
 * @implements {SpecializedInterface}
 */
class AccidentalOverride extends A {
  /** @protected */
  constructor() {
    super();
  }
  /** @return {!AccidentalOverride} */
  static $create__() {
    AccidentalOverride.$clinit();
    let $instance = new AccidentalOverride();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgemethods_AccidentalOverride__();
    return $instance;
  }

  $ctor__com_google_j2cl_transpiler_readable_bridgemethods_AccidentalOverride__() {
    this.$ctor__com_google_j2cl_transpiler_readable_bridgemethods_A__();
  }
  // Bridge method.
  /** @override @return {?string} */
  m_fun__java_lang_String(/** ?string */ arg0) {
    return /**@type {?string}*/ (
        $Casts.$to(super.m_fun__java_lang_Object(arg0), j_l_String));
  }

  static $clinit() {
    AccidentalOverride.$clinit = () => {};
    AccidentalOverride.$loadModules();
    A.$clinit();
  }
  /** @return {boolean} */
  static $isInstance(/** ? */ instance) {
    return instance instanceof AccidentalOverride;
  }

  static $loadModules() {
    j_l_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
}
$Util.$setClassMetadata(
    AccidentalOverride,
    'com.google.j2cl.transpiler.readable.bridgemethods.AccidentalOverride');

SpecializedInterface.$markImplementor(AccidentalOverride);

exports = AccidentalOverride;
//# sourceMappingURL=AccidentalOverride.js.map
